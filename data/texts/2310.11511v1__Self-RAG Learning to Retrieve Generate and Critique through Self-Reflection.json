{"metadata": {"pdf_filename": "2310.11511v1__Self-RAG Learning to Retrieve Generate and Critique through Self-Reflection.pdf", "source": "arXiv"}, "text": "Preprint.\nSELF-RAG: LEARNING TO RETRIEVE, GENERATE, AND\nCRITIQUE THROUGH SELF-REFLECTION\nAkari Asai\u2020, Zeqiu Wu\u2020, Yizhong Wang\u2020\u00a7, Avirup Sil\u2021, Hannaneh Hajishirzi\u2020\u00a7\n\u2020University of Washington\n\u00a7Allen Institute for AI\n\u2021IBM Research AI\n{akari,zeqiuwu,yizhongw,hannaneh}@cs.washington.edu, avi@us.ibm.com\nABSTRACT\nDespite their remarkable capabilities, large language models (LLMs) often produce\nresponses containing factual inaccuracies due to their sole reliance on the paramet-\nric knowledge they encapsulate. Retrieval-Augmented Generation (RAG), an ad\nhoc approach that augments LMs with retrieval of relevant knowledge, decreases\nsuch issues. However, indiscriminately retrieving and incorporating a fixed number\nof retrieved passages, regardless of whether retrieval is necessary, or passages are\nrelevant, diminishes LM versatility or can lead to unhelpful response generation.\nWe introduce a new framework called Self-Reflective Retrieval-Augmented Gen-\neration (SELF-RAG) that enhances an LM\u2019s quality and factuality through retrieval\nand self-reflection. Our framework trains a single arbitrary LM that adaptively\nretrieves passages on-demand, and generates and reflects on retrieved passages\nand its own generations using special tokens, called reflection tokens. Generating\nreflection tokens makes the LM controllable during the inference phase, enabling it\nto tailor its behavior to diverse task requirements. Experiments show that SELF-\nRAG (7B and 13B parameters) significantly outperforms state-of-the-art LLMs\nand retrieval-augmented models on a diverse set of tasks. Specifically, SELF-RAG\noutperforms ChatGPT and retrieval-augmented Llama2-chat on Open-domain QA,\nreasoning and fact verification tasks, and it shows significant gains in improving\nfactuality and citation accuracy for long-form generations relative to these models.1\n1\nINTRODUCTION\nState-of-the-art LLMs continue to struggle with factual errors (Mallen et al., 2023; Min et al., 2023)\ndespite their increased model and data scale (Ouyang et al., 2022). Retrieval-Augmented Generation\n(RAG) methods (Figure 1 left; Lewis et al. 2020; Guu et al. 2020) augment the input of LLMs\nwith relevant retrieved passages, reducing factual errors in knowledge-intensive tasks (Ram et al.,\n2023; Asai et al., 2023a). However, these methods may hinder the versatility of LLMs or introduce\nunnecessary or off-topic passages that lead to low-quality generations (Shi et al., 2023) since they\nretrieve passages indiscriminately regardless of whether the factual grounding is helpful. Moreover,\nthe output is not guaranteed to be consistent with retrieved relevant passages (Gao et al., 2023) since\nthe models are not explicitly trained to leverage and follow facts from provided passages. This\nwork introduces Self-Reflective Retrieval-augmented Generation (SELF-RAG) to improve an\nLLM\u2019s generation quality, including its factual accuracy without hurting its versatility, via on-demand\nretrieval and self-reflection. We train an arbitrary LM in an end-to-end manner to learn to reflect on\nits own generation process given a task input by generating both task output and intermittent special\ntokens (i.e., reflection tokens). Reflection tokens are categorized into retrieval and critique tokens to\nindicate the need for retrieval and its generation quality respectively (Figure 1 right). In particular,\ngiven an input prompt and preceding generations, SELF-RAG first determines if augmenting the\ncontinued generation with retrieved passages would be helpful. If so, it outputs a retrieval token that\ncalls a retriever model on demand (Step 1). Subsequently, SELF-RAG concurrently processes multiple\nretrieved passages, evaluating their relevance and then generating corresponding task outputs (Step\n2). It then generates critique tokens to criticize its own output and choose best one (Step 3) in terms\nof factuality and overall quality. This process differs from conventional RAG (Figure 1 left), which\n1Our code and trained models are available at https://selfrag.github.io/.\n1\narXiv:2310.11511v1  [cs.CL]  17 Oct 2023\n\nPreprint.\nStep 1: Retrieve K documents\nCalifornia was named after a fictional \nisland in a Spanish book. \nPrompt How did US states get their names? \nUS states got their names from a variety of \nsources. Eleven states are named after an \nindividual person (e.g, California was named \nafter Christopher Columbus). Some states \nincluding Texas and Utah, are named after \nNative American tribe.\nRetrieval-Augmented Generation (RAG)\nOurs: Self-reflective Retrieval-Augmented Generation (Self-RAG) \nPopular names by states. In Texas, \nEmma is a popular baby name. \nOf the fifty states, eleven are named \nafter an individual person. \nPrompt How did US states get their names? + \nStep 2: Prompt LM with K docs and generate\nRetriever\nLM\nPrompt How did US states get their names? \nUS states got their names from a variety of sources. \nRetrieve\nStep 1: Retrieve on demand  \nPrompt +  \n11 of 50 state names\nRelevant\nStep 2: Generate segment in parallel \ncome from persons.\nSupported\nIrrelevant\nTexas is named\nafter a Native American tribe. \nStep 3: Critique outputs and select best segment\norigins in a 16th-century novel \nLas Sergas de Esplandi\u00e1n. \nCalifornia's name has its\nRelevant\nPartially\nUS states got their names from a variety of sources. 11 of 50 \nstates names are come from persons.    26 states are named \nafter Native Americans, including Utah. \nPrompt: Write an essay of your best summer vacation\nPrompt: Write an essay of your best summer vacation\nNo Retrieval\nMy best summer vacation is when my family and I embarked on a road trip along \u2026\nMy best\u2026 \n>\nRepeat.\u2026\nNo information in passages\nContradictory\n>\nPrompt +  \nPrompt +  \nRetrieve\nFigure 1: Overview of SELF-RAG. SELF-RAG learns to retrieve, critique, and generate text passages\nto enhance overall generation quality, factuality, and verifiability.\nconsistently retrieves a fixed number of documents for generation regardless of the retrieval necessity\n(e.g., the bottom figure example does not require factual knowledge) and never second visits the\ngeneration quality. Moreover, SELF-RAG provides citations for each segment with its self-assessment\nof whether the output is supported by the passage, leading to easier fact verification.\nSELF-RAG trains an arbitrary LM to generate text with reflection tokens by unifying them as the\nnext token prediction from the expanded model vocabulary. We train our generator LM on a diverse\ncollection of text interleaved with reflection tokens and retrieved passages. Reflection tokens, inspired\nby reward models used in reinforcement learning (Ziegler et al., 2019; Ouyang et al., 2022), are\ninserted offline into the original corpus by a trained critic model. This eliminates the need to host a\ncritic model during training, reducing overhead. The critic model, in part, is supervised on a dataset\nof input, output, and corresponding reflection tokens collected by prompting a propriety LM (i.e.,\nGPT-4; OpenAI 2023). While we draw inspiration from studies that use control tokens to start and\nguide text generation (Lu et al., 2022; Keskar et al., 2019), our trained LM uses critique tokens to\nassess its own predictions after each generated segment as an integral part of the generation output.\nSELF-RAG further enables a customizable decoding algorithm to satisfy hard or soft constraints,\nwhich are defined by reflection token predictions. In particular, our inference-time algorithm enables\nus to (1) flexibly adjust retrieval frequency for different downstream applications and (2) customize\nmodels\u2019 behaviors to user preferences by leveraging reflection tokens through segment-level beam\nsearch using the weighted linear sum of the reflection token probabilities as segment score.\nEmpirical results on six tasks, including reasoning and long-form generation, demonstrate that SELF-\nRAG significantly outperforms pre-trained and instruction-tuned LLMs that have more parameters and\nwidely adopted RAG approaches with higher citation accuracy. In particular, SELF-RAG outperforms\nretrieval-augmented ChatGPT on four tasks, Llama2-chat (Touvron et al., 2023) and Alpaca (Dubois\net al., 2023) on all tasks. Our analysis demonstrates the effectiveness of training and inference with\nreflection tokens for overall performance improvements as well as test-time model customizations\n(e.g., balancing the trade-off between citation previsions and completeness).\n2\nRELATED WORK\nRetrieval-Augmented Generation. Retrieval-Augmented Generation (RAG) augments the input\nspace of LMs with retrieved text passages (Guu et al., 2020; Lewis et al., 2020), leading to large\nimprovements in knowledge-intensive tasks after fine-tuning or used with off-the-shelf LMs (Ram\net al., 2023). A more recent work (Luo et al., 2023) instruction-tunes an LM with a fixed number\n2\n\nPreprint.\nof retrieved passages prepended to input, or pre-train a retriever and LM jointly, followed by few-\nshot fine-tuning on task datasets (Izacard et al., 2022b).\nWhile prior work often retrieves only\nonce at the beginning, Jiang et al. (2023) propose to adaptively retrieve passages for generation\non top of a proprietary LLM or Schick et al. (2023) train an LM to generate API calls for named\nentities. Yet, the improved task performance of such approaches often comes at the expense of\nruntime efficiency (Mallen et al., 2023), robustness to irrelevant context (Shi et al., 2023), and lack of\nattributions (Liu et al., 2023a; Gao et al., 2023). We introduce a method to train an arbitrary LM to\nlearn to use retrieval on-demand for diverse instruction-following queries and introduce controlled\ngeneration guided by reflections tokens to further improve generation quality and attributions.\nConcurrent RAG work.\nA few concurrent works2 on RAG propose new training or prompting\nstrategies to improve widely-adopted RAG approaches. Lin et al. (2023) fine-tune both the retriever\nand LM on instruction-tuning datasets in two steps. While we also train our model on diverse\ninstruction-following datasets, SELF-RAG enables retrieval on demand and selection of the best\npossible model output via fine-grained self-reflection, making it widely applicable and more robust\nand controllable. Yoran et al. (2023) use a natural language inference model and Xu et al. (2023) use\na summarization model to filter out or compress retrieved passages before using them to prompt the\nLM to generate the output. SELF-RAG processes passages in parallel and filters out irrelevant ones\nthrough self-reflection, without relying on external models at inference. Moreover, our self-reflection\nmechanism also evaluates other aspects of the model output quality including factuality. LATS (Zhou\net al., 2023) prompt off-the-shelf LMs to search for relevant information for question answering tasks\nand to generate with tree search, guided by LM-generated value scores. While their value function\nsimply indicates an overall score of each generation, SELF-RAG trains to an arbitrary LM to learn to\ngenerate fine-grained self-reflection and customizable inference.\nTraining and generating with critics. Training LLMs with reinforcement learning (e.g., Proximal\nPolicy Optimization or PPO; Schulman et al. 2017) from human feedback (RLHF) has proven\neffective in aligning LLMs with human preferences (Ouyang et al., 2022). Wu et al. (2023) introduce\nfine-grained RLHF with multiple reward models. Though our work also studies fine-grained critique\non retrieval and generation, we train our target LM on task examples augmented with reflection\ntokens from a critic model offline, with a far lower training cost compared to RLHF. In addition,\nreflection tokens in SELF-RAG enable controllable generation at inference, while RLHF focuses on\nhuman preference alignment during training. Other works use general control tokens to guide LM\ngeneration (Lu et al., 2022; Korbak et al., 2023), while SELF-RAG uses reflection tokens to decide the\nneed for retrieval and to self-evaluate generation quality. Xie et al. (2023) propose a self-evaluation-\nguided decoding framework, but they focus only on reasoning tasks with one evaluation dimension\n(reasoning path consistency) and without retrieval. Recent work on LLM refinement (Dhuliawala\net al., 2023; Madaan et al., 2023; Paul et al., 2023) prompts a model to generate task output, natural\nlanguage feedback and refined task output iteratively, but at the cost of inference efficiency.\n3\nSELF-RAG: LEARNING TO RETRIEVE, GENERATE AND CRITIQUE\nWe introduce Self-Reflective Retrieval-Augmented Generation (SELF-RAG), shown in Figure 1.\nSELF-RAG is a framework that enhances the quality and factuality of an LLM through retrieval and\nself-reflection, without sacrificing LLM\u2019s original creativity and versatility. Our end-to-end training\nlets an LM M generate text informed by retrieved passages, if needed, and criticize the output by\nlearning to generate special tokens. These reflection tokens (Table 1) signal the need for retrieval\nor confirm the output\u2019s relevance, support, or completeness. In contrast, common RAG approaches\nretrieve passages indiscriminately, without ensuring complete support from cited sources.\n3.1\nPROBLEM FORMALIZATION AND OVERVIEW\nFormally, given input x, we train M to sequentially generate textual outputs y consisting of multiple\nsegments y = [y1, . . . , yT ], where yt indicates a sequence of tokens for the t-th segment.3 Generated\ntokens in yt include text from the original vocabulary as well as the reflection tokens (Table 1).\n2All work is arXived within a week of this preprint.\n3In this paper, we treat one sentence as a segment in our experiments, but our framework is applicable to any\nsegment unit (i.e., sub-sentence).\n3\n\nPreprint.\nType\nInput\nOutput\nDefinitions\nRetrieve\nx / x, y\n{yes, no, continue}\nDecides when to retrieve with R\nISREL\nx, d\n{relevant, irrelevant}\nd provides useful information to solve x.\nISSUP\nx, d, y\n{fully supported, partially\nsupported, no support}\nAll of the verification-worthy statement in y\nis supported by d.\nISUSE\nx, y\n{5, 4, 3, 2, 1}\ny is a useful response to x.\nTable 1: Four types of reflection tokens used in SELF-RAG. Each type uses several tokens to represent\nits output values. The bottom three rows are three types of Critique tokens, and the bold text indicates\nthe most desirable critique tokens. x, y, d indicate input, output, and a relevant passage, respectively.\nAlgorithm 1 SELF-RAG Inference\nRequire: Generator LM M, Retriever R, Large-scale passage collections {d1, . . . , dN}\n1: Input: input prompt x and preceding generation y<t, Output: next output segment yt\n2: M predicts Retrieve given (x, y<t)\n3: if Retrieve == Yes then\n4:\nRetrieve relevant text passages D using R given (x, yt\u22121)\n\u25b7Retrieve\n5:\nM predicts\nISREL given x, d and yt given x, d, y<t for each d \u2208D\n\u25b7Generate\n6:\nM predicts\nISSUP and\nISUSE given x, yt, d for each d \u2208D\n\u25b7Critique\n7:\nRank yt based on\nISREL ,\nISSUP ,\nISUSE\n\u25b7Detailed in Section 3.3\n8: else if Retrieve == No then\n9:\nMgen predicts yt given x\n\u25b7Generate\n10:\nMgen predicts\nISUSE given x, yt\n\u25b7Critique\nInference overview. Figure 1 and Algorithm 1 present an overview of SELF-RAG at inference. For\nevery x and preceding generation y<t, the model decodes a retrieval token to evaluate the utility\nof retrieval. If retrieval is not required, the model predicts the next output segment, as it does in a\nstandard LM. If retrieval is needed, the model generates: a critique token to evaluate the retrieved\npassage\u2019s relevance, the next response segment, and a critique token to evaluate if the information in\nthe response segment is supported by the passage. Finally, a new critique token evaluates the overall\nutility of the response.4 To generate each segment, SELF-RAG processes multiple passages in parallel\nand uses its own generated reflection tokens to enforce soft constraints (Section 3.3) or hard control\n(Algorithm 1) over the generated task output. For instance, in Figure 1 (right), the retrieved passages\nd1 is selected at the first time step since d2 does not provide direct evidence (\nISREL is Irrelevant)\nand d3 output is only partially supported while d1 are fully supported.\nTraining overview. SELF-RAG enables an arbitrary LM to generate text with reflection tokens\nby unifying them as next token predictions from the expanded model vocabulary (i.e., the original\nvocabulary plus reflection tokens). Specifically, we train the generator model M on a curated corpus\nwith interleaving passages retrieved by a retriever R and reflection tokens predicted by a critic model\nC (summarized in Appendix Algorithm 2). We train C to generate reflection tokens for evaluating\nretrieved passages and the quality of a given task output (Section 3.2.1). Using the critic model, we\nupdate the training corpus by inserting reflection tokens into task outputs offline. Subsequently, we\ntrain the final generator model (M) using the conventional LM objective (Section 3.2.2) to enable\nM to generate reflection tokens by itself without relying on the critic at inference time.\n3.2\nSELF-RAG TRAINING\nHere, we describe the supervised data collection and training of two models, the critic C (Section 3.2.1)\nand the generator M (Section 3.2.2).\n3.2.1\nTRAINING THE CRITIC MODEL\nData collection for critic model. Manual annotation of reflection tokens for each segment is\nexpensive (Wu et al., 2023). A state-of-the-art LLM like GPT-4 (OpenAI, 2023) can be effectively\n4We follow Liu et al. (2023a) in using a \u201cperceived\u201d utility value that is independent of retrieved passages.\n4\n\nPreprint.\nInput: How did US states get their names? \nInput: Write an essay of your best summer vacation\nOutput: My best summer vacation was a magical escape \nto the coastal town of Santorini. The azure waters, \ncharming white-washed building are unforgettable. \nCritic LM\nOutput: 1 of 50 states names come from persons. For instance, Louisiana was named in honor \nof King Louis XIV of France and Georgia was named after King George II. \nRetrieve\nPartially\nAugmented Output:                \nRetrieve\n<p>LOUISIANA: Named in\n<p>Of the fifty states, eleven are named after an individual person</p>.  \n             11 of 50 states\u2019 names come from person. \nRelevant\nSupported\nhonor of Louis XIV of France.</p>.  Relevant\nFor instance, Louisiana was named after King Louis XIV, and\nUtil: 5\nGeorgia was named after King George II. \nUtil: 5\nAugmented Output:                     My best summer \nvacation was a magical escape to the coastal town of \nSantorini.                     The azure waters, charming white-\nwashed building are unforgettable experience.\nNo Retrieval\nNo Retrieval\nRetriever\nFigure 2: SELF-RAG training examples. The left example does not require retrieval while the right\none requires retrieval; thus, passages are inserted. More examples are in Appendix Table 4.\nused to generate such feedback (Liu et al., 2023b). However, depending on such proprietary LMs\ncan raise API costs and diminish reproducibility (Chen et al., 2023). We create supervised data by\nprompting GPT-4 to generate reflection tokens and then distill their knowledge into an in-house C.\nFor each group of reflection tokens, we randomly sample instances from the original training data:\n{Xsample, Y sample} \u223c{X, Y }. As different reflection token groups have their own definitions and\ninput, as shown in Table 1, we use different instruction prompts for them. Here, we use Retrieve as\nan example. We prompt GPT-4 with a type-specific instruction (\u201cGiven an instruction, make a\njudgment on whether finding some external documents from the web helps to generate a better\nresponse.\u201d) followed by few-shot demonstrations I the original task input x and output y to predict\nan appropriate reflection token as text: p(r|I, x, y). Manual assessment reveals that GPT-4 reflection\ntoken predictions show high agreement with human evaluations. We collect 4k-20k supervised\ntraining data for each type and combine them to form training data for C. Appendix Section D shows\nthe full list of instructions, and A.1 contains more details and our analysis.\nCritic learning.\nAfter we collect training data Dcritic, we initialize C with a pre-trained LM and\ntrain it on Dcritic using a standard conditional language modeling objective, maximizing likelihood:\nmax\nC\nE((x,y),r)\u223cDcritic log pC(r|x, y), r for reflection tokens.\n(1)\nThough the initial model can be any pre-trained LM, we use the same one as the generator LM\n(i.e., Llama 2-7B; Touvron et al. 2023) for C initialization. The critic achieves a higher than 90%\nagreement with GPT-4-based predictions on most reflection token categories (Appendix Table 5).\n3.2.2\nTRAINING THE GENERATOR MODEL\nData collection for generator.\nGiven an input-output pair (x, y), we augment the original output\ny using the retrieval and critic models to create supervised data that precisely mimics the SELF-\nRAG inference-time process (Section 3.1). For each segment yt \u2208y, we run C to assess whether\nadditional passages could help to enhance generation. If retrieval is required, the retrieval special\ntoken Retrieve =Yes is added, and R retrieves the top K passages, D. For each passage, C further\nevaluates whether the passage is relevant and predicts\nISREL . If a passage is relevant, C further\nevaluates whether the passage supports the model generation and predicts\nISSUP . Critique tokens\nISREL and\nISSUP are appended after the retrieved passage or generations. At the end of the output, y\n(or yT ), C predicts the overall utility token\nISUSE , and an augmented output with reflection tokens\nand the original input pair is added to Dgen. See the example training data in Figure 2.\nGenerator learning. We train the generator model M by training on the curated corpus augmented\nwith reflection tokens Dgen using the standard next token objective:\nmax\nM E(x,y,r)\u223cDgen log pM(y, r|x).\n(2)\nUnlike C training (Eq. 1), M learns to predict the target output as well as the reflection tokens. During\ntraining, we mask out the retrieved text chunks (surrounded by <p> and </p> in Figure 2) for loss\ncalculation and expand the original vocabulary V with a set of reflection tokens { Critique , Retrieve }.\nConnections to prior work on learning with critique.\nRecent work incorporates additional\ncritique (feedback) during training, e.g., RLHF (Ouyang et al. 2022) via PPO. While PPO relies on\n5\n\nPreprint.\nseparate reward models during training, we compute critique offline and directly insert them into the\ntraining corpus, where the generator LM is trained with a standard LM objective. This significantly\nreduces training costs compared to PPO. Our work also relates to prior work that incorporates special\ntokens to control generation (Keskar et al., 2019; Lu et al., 2022; Korbak et al., 2023). Our SELF-RAG\nlearns to generate special tokens to evaluate its own prediction after each generated segment, enabling\nthe use of a soft re-ranking mechanism or hard constraints at inference (discussed next).\n3.3\nSELF-RAG INFERENCE\nGenerating reflection tokens to self-evaluate its own output makes SELF-RAG controllable during the\ninference phase, enabling it to tailor its behavior to diverse task requirements. For tasks demanding\nfactual accuracy (Min et al., 2023), we aim for the model to retrieve passages more frequently to\nensure that the output aligns closely with the available evidence. Conversely, in more open-ended\ntasks, like composing a personal experience essay, the emphasis shifts towards retrieving less and\nprioritizing the overall creativity or utility score. In this section, we describe approaches to enforce\ncontrol to meet these distinct objectives during the inference process.\nAdaptive retrieval with threshold. SELF-RAG dynamically decides when to retrieve text passages by\npredicting Retrieve . Alternatively, our framework allows a threshold to be set. Specifically, if the prob-\nability of generating the Retrieve =Yes token normalized over all output tokens in Retrieve surpasses a\ndesignated threshold, we trigger retrieval (details in Appendix Section A.3).\nTree-decoding with critique tokens. At each segment step t, when retrieval is required, based either\non hard or soft conditions, R retrieves K passages, and the generator M processes each passage in\nparallel and outputs K different continuation candidates. We conduct a segment-level beam search\n(with the beam size=B) to obtain the top-B segment continuations at each timestamp t, and return\nthe best sequence at the end of generation. The score of each segment yt with respect to passage d is\nupdated with a critic score S that is the linear weighted sum of the normalized probability of each\nCritique token type. For each critique token group G (e.g.,\nISREL ), we denote its score at timestamp\nt as sG\nt , and we compute a segment score as follows:\nf(yt, d, Critique ) = p(yt|x, d, y<t)) + S( Critique ), where\n(3)\nS( Critique ) =\nX\nG\u2208G\nwGsG\nt for G = { ISREL , ISSUP , ISUSE },\n(4)\nwhere sG\nt =\npt(\u02c6r)\nPNG\ni=1 pt(ri) stands for the generation probability of the most desirable reflection token\n\u02c6r (e.g.,\nISREL =Relevant) for the critique token type G with N G distinct tokens (that represent\ndifferent possible values for G). The weights wG in Eq. 4 are hyperparameters that can be adjusted\nat inference time to enable customized behaviors at test time. For instance, to ensure that result\ny is mostly supported by evidence, we can set a weight term for the\nISSUP score higher, while\nrelatively lowering weights for other aspects. Alternatively, we could further enforce hard constraints\nduring decoding using Critique . Instead of using a soft reward function in Eq. 4, we could explicitly\nfilter out a segment continuation when the model generates an undesirable\nCritique token (e.g.,\nISSUP =No support) . Balancing the trade-off between multiple preferences has been studied\nin RLHF (Touvron et al., 2023; Wu et al., 2023), which often requires training to change models\u2019\nbehaviors. SELF-RAG tailors an LM with no additional training.\n4\nEXPERIMENTS\n4.1\nTASKS AND DATASETS\nWe conduct evaluations of our SELF-RAG and diverse baselines on a range of downstream tasks,\nholistically evaluating outputs with metrics designed to assess overall correctness, factuality, and\nfluency. Throughout these experiments, we conduct zero-shot evaluations, where we provide instruc-\ntions describing tasks without few-shot demonstrations (Wei et al., 2022; Sanh et al., 2022). Details of\nour experiments\u2019 settings, including test-time instructions, are available in the Appendix Section B.1.\nClosed-set tasks include two datasets, i.e., a fact verification dataset about public health (PubHealth;\nZhang et al. 2023) and a multiple-choice reasoning dataset created from scientific exams (ARC-\n6\n\nPreprint.\nChallenge; Clark et al. 2018). We use accuracy as an evaluation metric and report on the test set. We\naggregate the answer probabilities of target classes for both of these datasets (Appendix Section B.2).\nShort-form generations tasks include two open-domain question answering (QA) datasets,\nPopQA (Mallen et al., 2023) and TriviaQA-unfiltered (Joshi et al., 2017), where systems need\nto answer arbitrary questions about factual knowledge. For PopQA, we use the long-tail subset,\nconsisting of 1,399 rare entity queries whose monthly Wikipedia page views are less than 100. As the\nTriviaQA-unfiltered (open) test set is not publicly available, we follow prior work\u2019s validation and\ntest split (Min et al., 2019; Guu et al., 2020), using 11,313 test queries for evaluation. We evaluate\nperformance based on whether gold answers are included in the model generations instead of strictly\nrequiring exact matching, following Mallen et al. (2023); Schick et al. (2023).\nLong-form generation tasks include a biography generation task (Min et al., 2023) and a long-form\nQA task ALCE-ASQA Gao et al. (2023); Stelmakh et al. (2022). We use FactScore (Min et al.,\n2023) to evaluate biographies, and we use official metrics of correctness (str-em), fluency based on\nMAUVE (Pillutla et al., 2021), and citation precision and recall (Gao et al., 2023) for ASQA. 5\n4.2\nBASELINES\nBaselines without retrievals.\nWe evaluate strong publicly available pre-trained LLMs,\nLlama27B,13B (Touvron et al., 2023), instruction-tuned models, Alpaca7B,13B (Dubois et al., 2023)\n(our replication based on Llama2); and models trained and reinforced using private data, Chat-\nGPT (Ouyang et al., 2022) and Llama2-chat13B. For instruction-tuned LMs, we use the official\nsystem prompt or instruction format used during training if publicly available. We also compare our\nmethod to concurrent work, CoVE65B (Dhuliawala et al., 2023), which introduces iterative prompt\nengineering to improve the factuality of LLM generations.\nBaselines with retrievals. We evaluate models augmented with retrieval at test time or during training.\nThe first category includes standard RAG baselines, where an LM (Llama2, Alpaca) generates output\ngiven the query prepended with the top retrieved documents using the same retriever as in our system.\nIt also includes Llama2-FT, where Llama2 is fine-tuned on all training data we use without the\nreflection tokens or retrieved passages. We also report the result of retrieval-augmented baselines\nwith LMs trained with private data: Ret-ChatGPT and Ret-Llama2-chat, which deploy the same\naugmentation technique above, as well as perplexity.ai, an InstructGPT-based production search\nsystem.\nThe second category includes concurrent methods that are trained with retrieved text\npassages, i.e., SAIL (Luo et al., 2023) to instruction-tune an LM on the Alpaca instruction-tuning\ndata with top retrieved documents inserted before instructions, and Toolformer (Schick et al., 2023)\nto pre-train an LM with API calls (e.g., Wikipedia APIs).6\n4.3\nEXPERIMENTAL SETTINGS\nTraining data and settings. Our training data consists of diverse instruction-following input-output\npairs. In particular, we sample instances from Open-Instruct processed data (Wang et al., 2023) and\nknowledge-intensive datasets (Petroni et al., 2021; Stelmakh et al., 2022; Mihaylov et al., 2018). In\ntotal, we use 150k instruction-output pairs. We use Llama2 7B and 13B (Touvron et al., 2023) as\nour generator base LM, and we use Llama2 7B as our base critic LM. For the retriever model R, we\nuse off-the-shelf Contriever-MS MARCO (Izacard et al., 2022a) by default and retrieve up to ten\ndocuments for each input. More training details are in the Appendix Section B.1.\nInference settings. As a default configuration, we assign the weight terms\nISREL ,\nISSUP ,\nISUSE\nvalues of 1.0, 1.0 and 0.5, respectively. To encourage frequent retrieval, we set the retrieval threshold\nto 0.2 for most tasks and to 0 for ALCE (Gao et al., 2023) due to citation requirements. We speed\nup inference using vllm (Kwon et al., 2023). At each segment level, we adopt a beam width of 2.\nFor a token-level generation, we use greedy decoding. By default, we use the top five documents\nfrom Contriever-MS MARCO (Izacard et al., 2022a); for biographies and open-domain QA, we\nuse additional top five documents retrieved by a web search engine, following Luo et al. (2023);\nfor ASQA, we use the author-provided top 5 documents by GTR-XXL (Ni et al., 2022) across all\nbaselines for a fair comparison.\n5https://github.com/princeton-nlp/ALCE\n6We report numbers using the results reported in the paper as the implementations are not available.\n7\n\nPreprint.\nTable 2: Overall experiment results on six tasks. Bold numbers indicate the best performance among\nnon-proprietary models, and gray-colored bold text indicates the best proprietary model when\nthey outperforms all non-proprietary models. \u2217indicates concurrent or recent results reported by\nconcurrent work. \u2013 indicates numbers that are not reported by the original papers or are not applicable.\nModels are sorted based on scale. FS, em, rg, mau, prec, rec denote FactScore (factuality); str-em,\nrouge (correctness); MAUVE (fluency); citation precision and recall, respectively.\nShort-form\nClosed-set\nLong-form generations (with citations)\nPopQA\nTQA\nPub\nARC\nBio\nASQA\nLM\n(acc)\n(acc)\n(acc)\n(acc)\n(FS)\n(em)\n(rg)\n(mau)\n(pre)\n(rec)\nLMs with proprietary data\nLlama2-c13B\n20.0\n59.3\n49.4\n38.4\n55.9\n22.4\n29.6\n28.6\n\u2013\n\u2013\nRet-Llama2-c13B\n51.8\n59.8\n52.1\n37.9\n79.9\n32.8\n34.8\n43.8\n19.8\n36.1\nChatGPT\n29.3\n74.3\n70.1\n75.3\n71.8\n35.3\n36.2\n68.8\n\u2013\n\u2013\nRet-ChatGPT\n50.8\n65.7\n54.7\n75.3\n\u2013\n40.7\n39.9\n79.7\n65.1\n76.6\nPerplexity.ai\n\u2013\n\u2013\n\u2013\n\u2013\n71.2\n\u2013\n\u2013\n\u2013\n\u2013\n\u2013\nBaselines without retrieval\nLlama27B\n14.7\n30.5\n34.2\n21.8\n44.5\n7.9\n15.3\n19.0\n\u2013\n\u2013\nAlpaca7B\n23.6\n54.5\n49.8\n45.0\n45.8\n18.8\n29.4\n61.7\n\u2013\n\u2013\nLlama213B\n14.7\n38.5\n29.4\n29.4\n53.4\n7.2\n12.4\n16.0\n\u2013\n\u2013\nAlpaca13B\n24.4\n61.3\n55.5\n54.9\n50.2\n22.9\n32.0\n70.6\n\u2013\n\u2013\nCoVE65B *\n\u2013\n\u2013\n\u2013\n\u2013\n71.2\n\u2013\n\u2013\n\u2013\n\u2013\n\u2013\nBaselines with retrieval\nToolformer*6B\n\u2013\n48.8\n\u2013\n\u2013\n\u2013\n\u2013\n\u2013\n\u2013\n\u2013\n\u2013\nLlama27B\n38.2\n42.5\n30.0\n48.0\n78.0\n15.2\n22.1\n32.0\n2.9\n4.0\nAlpaca7B\n46.7\n64.1\n40.2\n48.0\n76.6\n30.9\n33.3\n57.9\n5.5\n7.2\nLlama2-FT7B\n48.7\n57.3\n64.3\n65.8\n78.2\n31.0\n35.8\n51.2\n5.0\n7.5\nSAIL*7B\n\u2013\n\u2013\n69.2\n48.4\n\u2013\n\u2013\n\u2013\n\u2013\n\u2013\n\u2013\nLlama213B\n45.7\n47.0\n30.2\n26.0\n77.5\n16.3\n20.5\n24.7\n2.3\n3.6\nAlpaca13B\n46.1\n66.9\n51.1\n57.6\n77.7\n34.8\n36.7\n56.6\n2.0\n3.8\nOur SELF-RAG 7B\n54.9\n66.4\n72.4\n67.3\n81.2\n30.0\n35.7\n74.3\n66.9\n67.8\nOur SELF-RAG 13B\n55.8\n69.3\n74.5\n73.1\n80.2\n31.7\n37.0\n71.6\n70.3\n71.3\n5\nRESULTS AND ANALYSIS\n5.1\nMAIN RESULTS\nComparison against baselines without retrieval.\nTable 2 (top) presents the baselines without\nretrieval. Our SELF-RAG (bottom two rows) demonstrates a substantial performance advantage\nover supervised fine-tuned LLMs in all tasks and even outperforms ChatGPT in PubHealth, PopQA,\nbiography generations, and ASQA (Rouge and MAUVE). Our approach also significantly outperforms\na concurrent method that employs sophisticated prompt engineering; specifically, on the bio generation\ntask, our 7B and 13B models outperform the concurrent CoVE (Dhuliawala et al., 2023), which\niteratively prompts Llama265B to refine output.\nComparison against baselines with retrieval. As shown in Tables 2 (bottom), our SELF-RAG also\noutperforms existing RAG in many tasks, obtaining the best performance among non-proprietary\nLM-based models on all tasks. While our method outperforms other baselines, on PopQA or Bio,\npowerful instruction-tuned LMs with retrieval (e.g., LLama2-chat, Alpaca) show large gains from\ntheir non-retrieval baselines. However, we found that these baselines provide limited solutions for\ntasks where we cannot simply copy or extract sub-strings of retrieved passages. On PubHealth\nand ARC-Challenge, baselines with retrieval do not improve performance notably from their no-\nretrieval counterparts. We also observe that most baselines with retrieval struggle to improve citation\naccuracy. On ASQA, our model shows significantly higher citation precision and recall than all\nmodels except ChatGPT. Gao et al. (2023) found that ChatGPT consistently exhibits superior efficacy\nin this particular task, surpassing smaller LMs. Our SELF-RAG bridges this performance gap, even\noutperforming ChatGPT in citation precision, which measures whether the model-generated claim is\nfully supported by cited evidence. We also found that on the metrics for factual precision, SELF-RAG\n7B occasionally outperforms our 13B due to the tendency of smaller SELF-RAG to often generate\n8\n\nPreprint.\nPQA\nMed\nAS\n(acc)\n(acc)\n(em)\nSELF-RAG (50k)\n45.5\n73.5\n32.1\nTraining\nNo Retriever R\n43.6\n67.8\n31.0\nNo Critic C\n42.6\n72.0\n18.1\nTest\nNo retrieval\n24.7\n73.0\n\u2013\nHard constraints\n28.3\n72.6\n\u2013\nRetrieve top1\n41.8\n73.1\n28.6\nRemove\nISSUP\n44.1\n73.2\n30.6\n(a) Ablation\n1\n2\n70.0\n70.5\nPrecision\n1\n2\nWeight for IsSupport\n90\n95\nMauve\n(b) Customization\n0.0\n0.2\n0.4\n0.6\n0.98\n0.99\n0.99\n1.00\nAccuracy\nPubHealth\n0.0\n0.2\n0.4\n0.6\nRetrieval Threshold\n0.6\n0.8\n1.0\nAccuracy\nPopQA\n0.0\n0.5\n1.0\nFrequency\n0.25\n0.50\n0.75\n1.00\nFrequency\n(c) Retrieval\nFigure 3: Analysis on SELF-RAG: (a) Ablation studies for key components of SELF-RAG training\nand inference based on our 7B model. (b) Effects of soft weights on ASQA citation precision and\nMauve (fluency). (c) Retrieval frequency and normalized accuracy on PubHealth and PopQA.\nprecisely grounded yet shorter outputs. Llama2-FT7B, which is the baseline LM trained on the same\ninstruction-output pairs as SELF-RAG without retrieval or self-reflection and is retrieval-augmented\nat test time only, lags behind SELF-RAG. This result indicates SELF-RAG gains are not solely from\ntraining data and demonstrate the effectiveness of SELF-RAG framework.\n5.2\nANALYSIS\nAblation studies.\nWe conduct a set of ablations of our framework to identify which factors play\nkey roles. We evaluate two model variants trained differently than our model: No Retriever trains an\nLM using the standard instruction-following method given instruction-output pairs, without retrieved\npassages; No Critic trains an LM trained with input-output pairs that are always augmented with the\ntop one retrieved document without reflection tokens. This is similar to SAIL (Luo et al., 2023), and\nwe use our instruction-output data instead of using the Alpaca dataset (Dubois et al., 2023), as in\nSAIL. We also conduct ablation on our inference-time algorithm, including No retrieval disables\nretrieval during inference; Hard constraints indicates the model performance that retrieves when\nRetrieve =Yes instead of using the adaptive threshold; Retrieve top 1 always retrieves and uses the\ntop one document only, similar to standard RAG approaches; Remove\nISSUP indicates the model\nperformance that removes\nISSUP score only during critique-guided beam search in Eq. 4. In this\nablation experiment, we use a training instance size of 50k for a more efficient exploration of training\nvariations. Later in this section, we conduct an analysis of the effect of training data size. We conduct\nthe ablation studies on three datasets, PopQA, PubHealth, and ASQA. On ASQA, we evaluate models\non sampled 150 instances and exclude ablations involving adaptive or no retrieval processes.\nWe show in Table 3a the ablation results. The top part of the table shows results for training ablations,\nand the bottom part is for inference ablations. We see that all components play important roles. We\nalso observe a large performance gap between SELF-RAG and No Retriever or Critic baselines across\ntasks, indicating that training an LM with those models largely contributes to the performance gain of\nSELF-RAG. Using the top passages regardless of their relevance (Retrieve top 1) as in conventional\nRAG approaches causes a large drop in PopQA and ASQA, and removing\nISSUP during the beam\nsearch results hurts performance on ASQA. This demonstrates the effectiveness of SELF-RAG\u2019s\ncapabilities of carefully selecting generations based fine-grained multiple criterion, instead of naively\nusing all of the top passages from the retrieval model or solely depending on relevance scores.\nEffects of inference-time customization. One key benefit of our proposed framework is that it\nenables us to control how much each critique type affects the final generation sampling. We analyze\nthe effects of different parameter weights on the top of our 7B model during inference time on\nASQA, where multiple evaluation aspects are considered. Figure 3b shows the effects of changing\nthe weighting term for\nISSUP , which criticizes how supported the output is by the text passage. As\nthe figure shows, increasing the weight leads to positive effects on the models\u2019 citation precision\nsince this puts more emphasis on whether model generation is supported by the evidence. On the\n9\n\nPreprint.\n0\n50\n100\n150\nNum of training (k)\n35\n40\n45\n50\n55\nPerfomance\n(a) PopQA\n0\n100\nNum of training (k)\n71\n72\n73\n(b) PubHealth\n0\n100\nNum of training (k)\n40\n60\n(c) ASQA (prec)\nPop\nBio.\nS & P\n92.5\n70.0\nISREL\n95.0\n90.0\nISSUP\n90.0\n85.0\n(d) Human evaluation on PopQA\nand Bio generation.\nFigure 4: Training scale and Human analysis: (a) (b) (c) Training scale analysis shows the effect\nof the training data scale on PopQA, PubHealth and ASQA (citation precision), respectively. (d)\nHuman analysis on SELF-RAG outputs as well as reflection tokens.\ncontrary, a larger weight results in lower MAUVE scores: when generation gets longer and more\nfluent, there are often more claims that are not fully supported by citations, consistent with findings\nby Liu et al. (2023a). Our framework lets practitioners choose and customize models\u2019 behaviors at\ntest time by adjusting such parameters without requiring additional training.\nEfficiency and accuracy trade-off. Using our framework, practitioners can adjust how often retrieval\noccurs using the token probability of reward tokens. We evaluate how this adaptive threshold affects\noverall accuracy and frequency of retrieval, and we evaluate the performance with varying numbers\nof threshold \u03b4 (larger \u03b4 results in less retrieval) on PubHealth and PopQA. Figure 3c shows that\nthe model\u2019s retrieval frequencies dramatically change on both datasets. as \u03b4 varies. On one hand,\nperformance deterioration by retrieving less is smaller on PubHealth but larger in PopQA.\nEffects of training data size. We conduct an analysis of how the data scale affects the model\u2019s\nperformance. In particular, we randomly sample 5k, 10k, 20k, and 50k instances from our original\n150k training instances, and fine-tune four SELF-RAG 7B variants on those subsets. Then, we compare\nthe model performance on PopQA, PubHealth, and ASQA (citation precision) with our final SELF-\nRAG trained on the full 150k instances. We also evaluate Figures 4a, 4b and 4c shows the models\u2019\nperformance trained on different amount of data. Across all datasets, increasing data size often shows\nupward trajectories and the improvements are significantly larger in PopQA and ASQA, while we do\nnot observed such significant improvements on Llama2-FT7B when increasing the training data from\n50k to 150k. These results also indicate that further expanding the training data of SELF-RAG may\nlead to further improvements, although in this work we limit our training data size to 150k.\nHuman evaluations. We conduct small human evaluations on SELF-RAG outputs, as well as the\nreliability of predicted reflection tokens. In particular, we sampled 50 samples from PopQA and Bio\nresults. Following Menick et al. (2022), human annotators evaluate S&P, which indicates whether\nthe model output is plausible (i.e., the output is a reasonable and on-topic response to the question\nas if it were occurring in a conversation) and supported (i.e., the provided evidence is sufficient to\nverify the validity of the answer). For S&P, we do not consider the instances where SELF-RAG\npredicts irrelevant or no support. We then ask our annotators whether the model-predicted\nreflection tokens about\nISREL and\nISSUP match their inspections (e.g., whether the fully supported\noutput is supported by the cited evidence). Human annotators find SELF-RAG answers are often\nplausible and supported by relevant passages with higher S&P scores on short-form PopQA, which is\nconsistent with Menick et al. (2022). Human annotators also find\nISREL and\nISSUP reflection token\npredictions are mostly aligned with their assessments. Appendix Table 6 shows several annotated\nexamples and explanations on assessments.\n6\nCONCLUSION\nThis work introduces SELF-RAG, a new framework to enhance the quality and factuality of LLMs\nthrough retrieval on demand and self-reflection. SELF-RAG trains an LM to learn to retrieve, generate,\nand critique text passages and its own generation by predicting the next tokens from its original\nvocabulary as well as newly added special tokens, called reflection tokens. SELF-RAG further enables\nthe tailoring of LM behaviors at test time by leveraging reflection tokens. Our holistic evaluations on\nsix tasks using multiple metrics demonstrate that SELF-RAG significantly outperforms LLMs with\nmore parameters or with conventional retrieval-augmented generation approaches.\n10\n\nPreprint.\nETHICAL CONCERNS\nThis work aims to improve the factuality of LLM outputs, the lack of which continues to cause nu-\nmerous real-world problems (e.g., spread of misinformation and provision of incorrect and dangerous\nadvice). While our method shows significant improvements in terms of performance, factuality, and\ncitation accuracy, it can still generate outputs that are not fully supported by the citations. We hope\nthat explicit self-reflection and fine-grained attribution may help users verify factual errors in the\nmodel outputs.\nACKNOWLEDGMENTS\nWe thank Sewon Min, Scott Wen-tau Yih, Sean Welleck, and Kawin Ethayarajh for fruitful discussions\nin the early stages of this work. We thank Sewon Min, Joongwon (Daniel) Kim, and Sandy Kaplan\nfor valuable feedback on the paper, and Tianyu Gao and Weijia Shi for their help on evaluations.\nAkari Asai is supported by the IBM Fellowship. We thank Stability AI for providing computing\nto train and evaluate the LMs in this work, and Microsoft Accelerate Foundation Models Research\nProgram for the access to OpenAI APIs. This work was funded in part by the DARPA MCS program\nthrough NIWC Pacific (N66001-19-2-4031), NSF IIS-2044660, and gifts from AI2.\nREFERENCES\nAkari Asai, Kazuma Hashimoto, Hannaneh Hajishirzi, Richard Socher, and Caiming Xiong. Learn-\ning to retrieve reasoning paths over wikipedia graph for question answering. In International\nConference on Learning Representations, 2020. URL https://openreview.net/forum?\nid=SJgVHkrYDH.\nAkari Asai, Sewon Min, Zexuan Zhong, and Danqi Chen. Retrieval-based language models and appli-\ncations. In Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics\n(Tutorial), 2023a. URL https://aclanthology.org/2023.acl-tutorials.6.\nAkari Asai, Timo Schick, Patrick Lewis, Xilun Chen, Gautier Izacard, Sebastian Riedel, Hannaneh\nHajishirzi, and Wen-tau Yih. Task-aware retrieval with instructions. In Findings of the Associ-\nation for Computational Linguistics, 2023b. URL https://aclanthology.org/2023.\nfindings-acl.225.\nBernd Bohnet, Vinh Q Tran, Pat Verga, Roee Aharoni, Daniel Andor, Livio Baldini Soares, Jacob\nEisenstein, Kuzman Ganchev, Jonathan Herzig, Kai Hui, et al. Attributed question answering:\nEvaluation and modeling for attributed large language models. arXiv preprint arXiv:2212.08037,\n2022. URL https://arxiv.org/abs/2212.08037.\nLingjiao Chen, Matei Zaharia, and James Zou. How is chatgpt\u2019s behavior changing over time? arXiv\npreprint arXiv:2307.09009, 2023. URL https://arxiv.org/abs/2307.09009.\nPeter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot, Ashish Sabharwal, Carissa Schoenick, and\nOyvind Tafjord. Think you have solved question answering? try arc, the ai2 reasoning challenge.\narXiv preprint arXiv:1803.05457, 2018. URL https://arxiv.org/abs/1803.05457.\nTri Dao, Dan Fu, Stefano Ermon, Atri Rudra, and Christopher R\u00b4e. Flashattention: Fast and memory-\nefficient exact attention with io-awareness. In Advances in Neural Information Processing Systems,\n2022. URL https://openreview.net/forum?id=H4DqfPSibmx.\nShehzaad Dhuliawala, Mojtaba Komeili, Jing Xu, Roberta Raileanu, Xian Li, Asli Celikyilmaz, and\nJason Weston. Chain-of-verification reduces hallucination in large language models. arXiv preprint\narXiv:2309.11495, 2023. URL https://arxiv.org/abs/2309.11495.\nEmily Dinan, Stephen Roller, Kurt Shuster, Angela Fan, Michael Auli, and Jason Weston. Wizard of\nwikipedia: Knowledge-powered conversational agents. In International Conference on Learning\nRepresentations, 2019. URL https://openreview.net/forum?id=r1l73iRqKm.\nYann Dubois, Xuechen Li, Rohan Taori, Tianyi Zhang, Ishaan Gulrajani, Jimmy Ba, Carlos Guestrin,\nPercy Liang, and Tatsunori B. Hashimoto. Alpacafarm: A simulation framework for methods that\n11\n\nPreprint.\nlearn from human feedback. arXiv preprint arXiv:2305.14387, 2023. URL https://arxiv.\norg/abs/2305.14387.\nTianyu Gao, Howard Yen, Jiatong Yu, and Danqi Chen. Enabling large language models to generate\ntext with citations. arXiv preprint arXiv:2305.14627, 2023. URL https://arxiv.org/abs/\n2305.14627.\nKelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat, and Mingwei Chang. Retrieval augmented\nlanguage model pre-training. In International Conference on Machine Learning, 2020. URL\nhttps://dl.acm.org/doi/pdf/10.5555/3524938.3525306.\nGautier Izacard, Mathilde Caron, Lucas Hosseini, Sebastian Riedel, Piotr Bojanowski, Armand\nJoulin, and Edouard Grave. Unsupervised dense information retrieval with contrastive learning.\nTransactions on Machine Learning Research, 2022a. URL https://openreview.net/\nforum?id=jKN1pXi7b0.\nGautier Izacard, Patrick Lewis, Maria Lomeli, Lucas Hosseini, Fabio Petroni, Timo Schick, Jane\nDwivedi-Yu, Armand Joulin, Sebastian Riedel, and Edouard Grave. Few-shot learning with\nretrieval augmented language models. arXiv preprint arXiv:2208.03299, 2022b. URL https:\n//arxiv.org/abs/2208.03299.\nZhengbao Jiang, Frank F Xu, Luyu Gao, Zhiqing Sun, Qian Liu, Jane Dwivedi-Yu, Yiming Yang,\nJamie Callan, and Graham Neubig.\nActive retrieval augmented generation.\narXiv preprint\narXiv:2305.06983, 2023. URL https://arxiv.org/abs/2305.06983.\nMandar Joshi, Eunsol Choi, Daniel Weld, and Luke Zettlemoyer. TriviaQA: A large scale distantly\nsupervised challenge dataset for reading comprehension. In Proceedings of the 55th Annual\nMeeting of the Association for Computational Linguistics (Volume 1: Long Papers), 2017. URL\nhttps://aclanthology.org/P17-1147.\nNitish Shirish Keskar, Bryan McCann, Lav R Varshney, Caiming Xiong, and Richard Socher.\nCtrl: A conditional transformer language model for controllable generation. arXiv preprint\narXiv:1909.05858, 2019. URL https://arxiv.org/abs/1909.05858.\nTomasz Korbak, Kejian Shi, Angelica Chen, Rasika Vinayak Bhalerao, Christopher Buckley, Jason\nPhang, Samuel R Bowman, and Ethan Perez. Pretraining language models with human preferences.\nIn International Conference on Machine Learning, 2023. URL https://openreview.net/\nforum?id=AT8Iw8KOeC.\nTom Kwiatkowski, Jennimaria Palomaki, Olivia Redfield, Michael Collins, Ankur Parikh, Chris\nAlberti, Danielle Epstein, Illia Polosukhin, Jacob Devlin, Kenton Lee, Kristina Toutanova, Llion\nJones, Matthew Kelcey, Ming-Wei Chang, Andrew M. Dai, Jakob Uszkoreit, Quoc Le, and\nSlav Petrov. Natural questions: A benchmark for question answering research. Transactions of\nthe Association for Computational Linguistics, 2019. URL https://aclanthology.org/\nQ19-1026.\nWoosuk Kwon, Zhuohan Li, Siyuan Zhuang, Ying Sheng, Lianmin Zheng, Cody Hao Yu, Joseph E.\nGonzalez, Hao Zhang, and Ion Stoica. Efficient memory management for large language model\nserving with pagedattention. In Proceedings of the ACM SIGOPS 29th Symposium on Operating\nSystems Principles, 2023. URL https://arxiv.org/abs/2309.06180.\nPatrick Lewis, Ethan Perez, Aleksandra Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal,\nHeinrich K\u00a8uttler, Mike Lewis, Wen-tau Yih, Tim Rockt\u00a8aschel, Sebastian Riedel, and Douwe Kiela.\nRetrieval-augmented generation for knowledge-intensive nlp tasks. In Advances in Neural Infor-\nmation Processing Systems, 2020. URL https://proceedings.neurips.cc/paper/\n2020/file/6b493230205f780e1bc26945df7481e5-Paper.pdf.\nXi Victoria Lin, Xilun Chen, Mingda Chen, Weijia Shi, Maria Lomeli, Rich James, Pedro Rodriguez,\nJacob Kahn, Gergely Szilvasy, Mike Lewis, Luke Zettlemoyer, and Scott Yih. Ra-dit: Retrieval-\naugmented dual instruction tuning, 2023. URL https://arxiv.org/abs/2310.01352.\nNelson F Liu, Tianyi Zhang, and Percy Liang. Evaluating verifiability in generative search engines.\narXiv preprint arXiv:2304.09848, 2023a. URL https://arxiv.org/abs/2304.09848.\n12\n\nPreprint.\nYang Liu, Dan Iter, Yichong Xu, Shuohang Wang, Ruochen Xu, and Chenguang Zhu. Gpteval: Nlg\nevaluation using gpt-4 with better human alignment. arXiv preprint arXiv:2303.16634, 2023b.\nURL https://arxiv.org/abs/2303.16634.\nXiming Lu, Sean Welleck, Jack Hessel, Liwei Jiang, Lianhui Qin, Peter West, Prithviraj Am-\nmanabrolu, and Yejin Choi. QUARK: Controllable text generation with reinforced unlearning.\nIn Advances in Neural Information Processing Systems, 2022. URL https://openreview.\nnet/forum?id=5HaIds3ux5O.\nHongyin Luo, Yung-Sung Chuang, Yuan Gong, Tianhua Zhang, Yoon Kim, Xixin Wu, Danny Fox,\nHelen Meng, and James Glass. Sail: Search-augmented instruction learning. arXiv preprint\narXiv:2305.15225, 2023. URL https://arxiv.org/abs/2305.15225.\nAman Madaan, Niket Tandon, Prakhar Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri\nAlon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang, Shashank Gupta, Bodhisattwa Prasad\nMajumder, Katherine Hermann, Sean Welleck, Amir Yazdanbakhsh, and Peter Clark. Self-\nrefine: Iterative refinement with self-feedback. arXiv preprint arXiv:2303.17651, 2023. URL\nhttps://arxiv.org/abs/2303.17651.\nAlex Mallen, Akari Asai, Victor Zhong, Rajarshi Das, Daniel Khashabi, and Hannaneh Hajishirzi.\nWhen not to trust language models: Investigating effectiveness of parametric and non-parametric\nmemories. In Proceedings of the 61st Annual Meeting of the Association for Computational\nLinguistics (Volume 1: Long Papers), 2023. URL https://aclanthology.org/2023.\nacl-long.546.\nJacob Menick, Maja Trebacz, Vladimir Mikulik, John Aslanides, Francis Song, Martin Chadwick,\nMia Glaese, Susannah Young, Lucy Campbell-Gillingham, Geoffrey Irving, et al. Teaching\nlanguage models to support answers with verified quotes. arXiv preprint arXiv:2203.11147, 2022.\nURL https://arxiv.org/abs/2203.11147.\nTodor Mihaylov, Peter Clark, Tushar Khot, and Ashish Sabharwal. Can a suit of armor conduct\nelectricity? a new dataset for open book question answering. In Proceedings of the 2018 Conference\non Empirical Methods in Natural Language Processing, 2018. URL https://aclanthology.\norg/D18-1260.\nSewon Min, Danqi Chen, Hannaneh Hajishirzi, and Luke Zettlemoyer. A discrete hard EM approach\nfor weakly supervised question answering. In Proceedings of the 2019 Conference on Empirical\nMethods in Natural Language Processing and the 9th International Joint Conference on Natu-\nral Language Processing (EMNLP-IJCNLP), 2019. URL https://aclanthology.org/\nD19-1284.\nSewon Min, Kalpesh Krishna, Xinxi Lyu, Mike Lewis, Wen-tau Yih, Pang Wei Koh, Mohit Iyyer,\nLuke Zettlemoyer, and Hannaneh Hajishirzi. Factscore: Fine-grained atomic evaluation of factual\nprecision in long form text generation. arXiv preprint arXiv:2305.14251, 2023. URL https:\n//arxiv.org/abs/2305.14251.\nReiichiro Nakano, Jacob Hilton, Suchir Balaji, Jeff Wu, Long Ouyang, Christina Kim, Christopher\nHesse, Shantanu Jain, Vineet Kosaraju, William Saunders, et al. Webgpt: Browser-assisted\nquestion-answering with human feedback. arXiv preprint arXiv:2112.09332, 2021. URL https:\n//arxiv.org/abs/2112.09332.\nJianmo Ni, Chen Qu, Jing Lu, Zhuyun Dai, Gustavo Hernandez Abrego, Ji Ma, Vincent Zhao,\nYi Luan, Keith Hall, Ming-Wei Chang, and Yinfei Yang. Large dual encoders are generalizable\nretrievers. In Proceedings of the 2022 Conference on Empirical Methods in Natural Language\nProcessing, 2022. URL https://aclanthology.org/2022.emnlp-main.669.\nOpenAI. Gpt-4 technical report. arXiv preprint arXiv:2303.08774, 2023. URL https://arxiv.\norg/abs/2303.08774.\nLong Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright, Pamela Mishkin, Chong\nZhang, Sandhini Agarwal, Katarina Slama, Alex Gray, John Schulman, Jacob Hilton, Fraser Kelton,\nLuke Miller, Maddie Simens, Amanda Askell, Peter Welinder, Paul Christiano, Jan Leike, and\n13\n\nPreprint.\nRyan Lowe. Training language models to follow instructions with human feedback. In Advances in\nNeural Information Processing Systems, 2022. URL https://openreview.net/forum?\nid=TG8KACxEON.\nDebjit Paul, Mete Ismayilzada, Maxime Peyrard, Beatriz Borges, Antoine Bosselut, Robert West,\nand Boi Faltings. Refiner: Reasoning feedback on intermediate representations. arXiv preprint\narXiv:2304.01904, 2023. URL https://arxiv.org/abs/2304.01904.\nFabio Petroni, Aleksandra Piktus, Angela Fan, Patrick Lewis, Majid Yazdani, Nicola De Cao, James\nThorne, Yacine Jernite, Vladimir Karpukhin, Jean Maillard, Vassilis Plachouras, Tim Rockt\u00a8aschel,\nand Sebastian Riedel. KILT: a benchmark for knowledge intensive language tasks. In Proceedings\nof the 2021 Conference of the North American Chapter of the Association for Computational\nLinguistics: Human Language Technologies, 2021. URL https://aclanthology.org/\n2021.naacl-main.200.\nKrishna Pillutla, Swabha Swayamdipta, Rowan Zellers, John Thickstun, Sean Welleck, Yejin Choi,\nand Zaid Harchaoui. MAUVE: Measuring the gap between neural text and human text using\ndivergence frontiers. In Advances in Neural Information Processing Systems, 2021. URL https:\n//openreview.net/forum?id=Tqx7nJp7PR.\nSamyam Rajbhandari, Jeff Rasley, Olatunji Ruwase, and Yuxiong He. Zero: Memory optimizations\ntoward training trillion parameter models. In Proceedings of the International Conference for High\nPerformance Computing, Networking, Storage and Analysis, 2020. URL https://dl.acm.\norg/doi/10.5555/3433701.3433727.\nOri Ram, Yoav Levine, Itay Dalmedigos, Dor Muhlgay, Amnon Shashua, Kevin Leyton-Brown, and\nYoav Shoham. In-context retrieval-augmented language models. Transactions of the Association\nfor Computational Linguistics, 2023. URL https://arxiv.org/abs/2302.00083.\nVictor Sanh, Albert Webson, Colin Raffel, Stephen Bach, Lintang Sutawika, Zaid Alyafeai, Antoine\nChaffin, Arnaud Stiegler, Arun Raja, Manan Dey, M Saiful Bari, Canwen Xu, Urmish Thakker,\nShanya Sharma Sharma, Eliza Szczechla, Taewoon Kim, Gunjan Chhablani, Nihal Nayak, De-\nbajyoti Datta, Jonathan Chang, Mike Tian-Jian Jiang, Han Wang, Matteo Manica, Sheng Shen,\nZheng Xin Yong, Harshit Pandey, Rachel Bawden, Thomas Wang, Trishala Neeraj, Jos Rozen,\nAbheesht Sharma, Andrea Santilli, Thibault Fevry, Jason Alan Fries, Ryan Teehan, Teven Le Scao,\nStella Biderman, Leo Gao, Thomas Wolf, and Alexander M Rush. Multitask prompted training\nenables zero-shot task generalization. In International Conference on Learning Representations,\n2022. URL https://openreview.net/forum?id=9Vrb9D0WI4.\nTimo Schick, Jane Dwivedi-Yu, Roberto Dess`\u0131, Roberta Raileanu, Maria Lomeli, Luke Zettlemoyer,\nNicola Cancedda, and Thomas Scialom. Toolformer: Language models can teach themselves to\nuse tools. arXiv preprint arXiv:2302.04761, 2023. URL https://arxiv.org/abs/2302.\n04761.\nJohn Schulman, Filip Wolski, Prafulla Dhariwal, Alec Radford, and Oleg Klimov. Proximal policy\noptimization algorithms. arXiv preprint arXiv:1707.06347, 2017. URL https://arxiv.org/\nabs/1707.06347.\nFreda Shi, Xinyun Chen, Kanishka Misra, Nathan Scales, David Dohan, Ed H. Chi, Nathanael\nSch\u00a8arli, and Denny Zhou. Large language models can be easily distracted by irrelevant context.\nIn Proceedings of the 40th International Conference on Machine Learning, 2023. URL https:\n//proceedings.mlr.press/v202/shi23a.html.\nIvan Stelmakh, Yi Luan, Bhuwan Dhingra, and Ming-Wei Chang. ASQA: Factoid questions meet long-\nform answers. In Proceedings of the 2022 Conference on Empirical Methods in Natural Language\nProcessing, 2022. URL https://aclanthology.org/2022.emnlp-main.566.\nJames Thorne, Andreas Vlachos, Christos Christodoulopoulos, and Arpit Mittal. FEVER: a large-\nscale dataset for fact extraction and VERification. In Proceedings of the 2018 Conference of the\nNorth American Chapter of the Association for Computational Linguistics: Human Language Tech-\nnologies, Volume 1 (Long Papers), 2018. URL https://aclanthology.org/N18-1074.\n14\n\nPreprint.\nHugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay\nBashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, et al. Llama 2: Open foundation\nand fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023. URL https://arxiv.\norg/abs/2307.09288.\nYizhong Wang, Hamish Ivison, Pradeep Dasigi, Jack Hessel, Tushar Khot, Khyathi Raghavi Chandu,\nDavid Wadden, Kelsey MacMillan, Noah A Smith, Iz Beltagy, et al. How far can camels go?\nexploring the state of instruction tuning on open resources. arXiv preprint arXiv:2306.04751, 2023.\nURL https://arxiv.org/abs/2306.04751.\nJason Wei, Maarten Bosma, Vincent Zhao, Kelvin Guu, Adams Wei Yu, Brian Lester, Nan Du,\nAndrew M. Dai, and Quoc V Le. Finetuned language models are zero-shot learners. In International\nConference on Learning Representations, 2022. URL https://openreview.net/forum?\nid=gEZrGCozdqR.\nZeqiu Wu, Yushi Hu, Weijia Shi, Nouha Dziri, Alane Suhr, Prithviraj Ammanabrolu, Noah A\nSmith, Mari Ostendorf, and Hannaneh Hajishirzi. Fine-grained human feedback gives better\nrewards for language model training. arXiv preprint arXiv:2306.01693, 2023. URL https:\n//arxiv.org/abs/2306.01693.\nYuxi Xie, Kenji Kawaguchi, Yiran Zhao, Xu Zhao, Min-Yen Kan, Junxian He, and Qizhe Xie. Decom-\nposition enhances reasoning via self-evaluation guided decoding. arXiv preprint arXiv:2305.00633,\n2023. URL https://arxiv.org/abs/2305.00633.\nFangyuan Xu, Weijia Shi, and Eunsol Choi. Recomp: Improving retrieval-augmented lms with\ncompression and selective augmentation, 2023. URL https://arxiv.org/abs/2310.\n04408.\nOri Yoran, Tomer Wolfson, Ori Ram, and Jonathan Berant. Making retrieval-augmented language\nmodels robust to irrelevant context, 2023. URL https://arxiv.org/abs/2310.01558.\nXiang Yue, Boshi Wang, Kai Zhang, Ziru Chen, Yu Su, and Huan Sun. Automatic evaluation of\nattribution by large language models. arXiv preprint arXiv:2305.06311, 2023. URL https:\n//arxiv.org/abs/2305.06311.\nTianhua Zhang, Hongyin Luo, Yung-Sung Chuang, Wei Fang, Luc Gaitskell, Thomas Hartvigsen,\nXixin Wu, Danny Fox, Helen Meng, and James Glass. Interpretable unified language checking.\narXiv preprint arXiv:2304.03728, 2023. URL https://arxiv.org/abs/2304.03728.\nAndy Zhou, Kai Yan, Michal Shlapentokh-Rothman, Haohan Wang, and Yu-Xiong Wang. Language\nagent tree search unifies reasoning acting and planning in language models, 2023. URL https:\n//arxiv.org/abs/2310.04406.\nDaniel M Ziegler, Nisan Stiennon, Jeffrey Wu, Tom B Brown, Alec Radford, Dario Amodei, Paul\nChristiano, and Geoffrey Irving. Fine-tuning language models from human preferences. arXiv\npreprint arXiv:1909.08593, 2019. URL https://arxiv.org/abs/1909.08593.\n15\n\nPreprint.\nAPPENDIX\nA\nSELF-RAG Details\n17\nA.1\nReflection Tokens.\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n17\nA.2\nSELF-RAG Training . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n17\nA.3\nSELF-RAG Inference . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n19\nB\nExperimental Details\n19\nB.1\nMore Details of Training . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n19\nB.2\nMore Details of Evaluations\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n20\nC Results\n20\nC.1\nAnalysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n20\nC.2\nHuman Evaluation Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n21\nC.3\nQualitative Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n21\nD Full List of Instructions and Demonstrations for GPT-4\n21\n16\n\nPreprint.\nA\nSELF-RAG DETAILS\nA.1\nREFLECTION TOKENS.\nDefinitions of reflection tokens.\nBelow, we provide a detailed definition of reflection type and\noutput tokens. The first three aspects will be provided at each segment level, while the final aspect is\nonly given at each output level.\n\u2022 Retrieval-on-demand ( Retrieve ): Given an input and previous-step generation (if applicable),\nan LM determines whether the continuation requires factual grounding. No indicates retrieval\nis unnecessary as the sequence does not require factual grounding or may not be enhanced by\nknowledge retrieval, Yes indicates retrieval is necessary. We additionally have continue\nto use evidence, which indicates that a model can continue to use the evidence retrieved\npreviously. For instance, a passage may contain rich factual information, and thus SELF-RAG\ngenerates multiple segments based on the passage.\n\u2022 Relevant (\nISREL ): Retrieved knowledge may not be always relevant to the input. This aspect\nindicates whether the evidence provides useful information (Relevant) or not (Irrelevant).\n\u2022 Supported (\nISSUP ): Attribution is the concept of whether the output is fully supported by\ncertain evidence (Menick et al., 2022; Bohnet et al., 2022). This aspect judges how much infor-\nmation in the output is entailed by the evidence. We evaluate attributions in three scale, Fully\nsupported, Partially supported, and No support / Contradictory, follow-\ning Yue et al. (2023); Nakano et al. (2021).\n\u2022 Useful (\nISUSE ): Following the definitions from Liu et al. (2023a), we define the perceived utility\nas whether the response is a helpful and informative answer to the query, independently from\nwhether it is in fact factual or not. This can be also viewed as plausibility in Menick et al. (2022).\nFor usefulness, we use a five-scale evaluation (1 is the lowest and 5 is the highest).\nDetails of GPT-4-based data collections.\nWe use the instruction and demonstration pairs to prompt\nGPT-4, listed in Section D. Following an official recommendation, we separate instructions and\noutputs with \u201c##\u201d. We use the temperature 1 and set the maximum output token counts to be 200. We\ndiscard instances where GPT-4 does not follow the designated output formats or output sequences\nthat do not match our expected category names. As a result, we collected 1,2594 for Retrieve , 11,181\nfor\nISSUP , 19,317 for relevance, 3,831 for utility.\nManual analysis of the GPT-4 predictions.\nThe authors of this paper manually assess randomly\nsampled 20 instances for each aspect and check if GPT-4 predictions match their assessments given\nthe same instruction, demonstrations, and test instances. We found our assessments show high\nagreement with GPT-4 predictions, especially for relevance (95%), retrieval necessity (95%), and\nthe degree of support (90%). Agreement was slightly lower in usefulness (80%), mostly due to the\ndisagreement between 1 and 2 or 4 and 5.\nA.2\nSELF-RAG TRAINING\nOverview of training.\nAlgorithm 2 provides a high-level overview of our training.\nFull list of seed datasets.\nTo sample diverse input-output pairs, we sample instances of the Open-\nInstruct (Wang et al., 2023) dataset. In particular, we use their ShareGPT, GPT-4 Alpaca, Alpaca,\nOpenAssistant, and FLAN subsets subsets. We also sample instances from a couple of knowledge-\nintensive datasets, Natural Questions (Kwiatkowski et al., 2019), Wizard of Wikipedia (Dinan et al.,\n2019) and FEVER (Thorne et al., 2018) from the KILT benchmark (Petroni et al., 2021), ASQA (Stel-\nmakh et al., 2022) and multiple QA datasets including ARC-Easy and OpenBookQA (Mihaylov et al.,\n2018). Table 3 shows the full list of training instances, and in total, we use 145,619 instances.\nPerformance of the Critic C.\nWe evaluate the accuracy of reward predictions by splitting GPT-4\ngenerated feedback into training, development, and test sets. The accuracy of the reward model is\nas follows. Table 5 shows the model performance of predicting GPT-4 judgments. As you can see,\noverall our fine-tuned reward model shows high prediction matching with GPT-4 predicted feedback.\n17\n\nPreprint.\nAlgorithm 2 SELF-RAG Training\n1: Input input-output data D = {X, Y }, generator M, C \u03b8\n2: Initialize C with a pre-trained LM\n3: Sample data {Xsample, Y sample} \u223c{X, Y }\n\u25b7Training Critic LM (Section 3.2.1)\n4: for (x, y) \u2208(Xsample, Y sample) do\n\u25b7Data collections for C\n5:\nPrompt GPT-4 to collect a reflection token r for (x, y)\n6:\nAdd {(x, y, r)} to Dcritic\n7: Update C with next token prediction loss\n\u25b7Critic learning; Eq. 1\n8: Initialize M with a pre-trained LM\n\u25b7Training Generator LM (Section 3.2.2)\n9: for (x, y) \u2208(X, Y ) do\n\u25b7Data collection for M with Dcritic\n10:\nRun C to predict r given (x, y)\n11:\nAdd (x, y, r) to Dgen\n12: Update M on Dgen with next token prediction loss\n\u25b7Generator LM learning; Eq. 2\nDataset name\ncategory\nData source\nthe number of instances\nGPT-4 Alpaca\nInstruction-following\nOpen-Instruct\n26,168\nStanford Alpaca\nInstruction-following\nOpen-Instruct\n25,153\nFLAN-V2\nInstruction-following\nOpen-Instruct\n17,817\nShareGPT\nInstruction-following\nOpen-Instruct\n13,406\nOpen Assistant 1\nInstruction-following\nOpen-Instruct\n9,464\nWizard of Wikipedia\nKnowledge-intensive\nKILT\n17,367\nNatural Questions\nKnowledge-intensive\nKILT\n15,535\nFEVER\nKnowledge-intensive\nKILT\n9,966\nOpenBoookQA\nKnowledge-intensive\nHF Dataset\n4,699\nArc-Easy\nKnowledge-intensive\nHF Dataset\n2,147\nASQA\nKnowledge-intensive\nASQA\n3,897\nTable 3: The generator LM M training data statistics.\nbase LM\nRetrieve\nISSUP\nISREL\nISUSE\nLlama2-7B\n93.8\n93.5\n80.2\n73.5\nFLAN-3B\n85.6\n73.1\n82.0\n72.1\nFigure 5: Reward prediction accuracy using GPT-4 predictions as ground-truth predictions.\nWhile our final model uses Llama2-7B as a base LM, we also train and compare FLAN-3B (Wei\net al., 2022) model on the same data, to investigate the effectiveness of different data sizes affect final\nreward predictions. In most aspects, our reward model shows higher than 80% accuracy, indicating\nthe powerful ability of fine-tuned specialized LMs to evaluate text. While both models show relatively\nlower performance on\nISUSE , this is because both models often confuse between the two highest\ncases (5 and 4), where human annotators can also disagree.\nDetails of M data creation.\nHere, we provide detailed data creation procedures. Algorithm 3\nsummarizes the process. Here we set yt to y for simplification. Once we train the critic model, we\nfirst run it on input data from the aforementioned datasets, to predict whether retrieval is needed or\nnot. For the instances where the critic predicts Retrieve =No, we only predict the\nISUSE given input\nand output. For the instances where the critic predicts Retrieve =Yes, we first retrieve passages using\nthe input and the entire output as queries, to find passages that are relevant to the entire output. We\nthen split output sentences using Spacy.7 For each sentence, we run C to predict whether the retrieval\nis necessary or not, given the input, preceding segments, and the initial retrieved passage. If C predicts\nRetrieve =No, then do not insert any paragraph at the tth segment. If C predicts Retrieve =Yes, then\nwe use the original input and the tth segment as a retrieval query to find relevant passages for the\nt-th segment. For each retrieved passage, we predict\nISREL and\nISSUP . If there is any passage and\ncontinuation with\nISREL =Relevant and\nISSUP =Fully Supported /\nISSUP =Partially\n7https://spacy.io/\n18\n\nPreprint.\nSupported, then we sample it as the continuation. If there is more than one passage satisfying this\ncriterion, we use the one with the highest retrieval score. If there are only\nISREL =Irrelevant or\nISSUP =No Support passages, we randomly sample one passage.\nAlgorithm 3 Mgen Data creation\n1: Input Input-output data D = X, Y\n2: for (x, y) \u2208{X, Y } do\n3:\nGiven (x, y) C predicts Retrieve\n4:\nif Retrieve is predicted then\n5:\nRetrieve relevant passages D using R given (x, y)\n\u25b7Retrieve passages\n6:\nfor d \u2208D do\n7:\nC predicts\nISREL for each d\n\u25b7Predict relevance of passages\n8:\nC predicts\nISSUP for each (y, d)\n\u25b7Predict supports of outputs\n9:\nC predicts\nISUSE for each d\n\u25b7Predict overall utility (t = T only)\n10:\nSample d\n11:\nelse if Retrieve is not predicted then\n12:\nC predicts\nISUSE given x, y\nAdd augmented (x, y, d, r) to Dgen\nTraining examples.\nTable 4 show several training examples used for M training.\nA.3\nSELF-RAG INFERENCE\nDetails of beam-search score calculations.\nWe first compute scores for each critique type by\ntaking the normalized probabilities of desirable tokens. For\nISREL , we compute the score as follows:\ns( ISREL ) =\np( ISREL = RELEVANT)\np( ISREL = RELEVANT) + p( ISREL = IRRELEVANT).\nFor\nISSUP , we compute the score as follows:\ns( ISREL ) = p( ISSUP = FULLY)\nS\n+ 0.5 \u00d7 p( ISSUP = PARTIALLY)\nS\n,\nwhere S = P\nt\u2208{FULLY,PARTIALLY,NO} p( ISSUP = t). For\nISUSE where we have a five-scale score, we\ncompute the weighted sum of the scores. We assigns weighted scores of w = {\u22121, \u22120.5, 0, 0.5, 1}\nto the tokens\nISUSE ={1, 2, 3, 4, 5}, and compute the final scores as follows:\ns( ISUSE ) =\n5\nX\ni\nwi\np( ISUSE = i)\nS\n,\nwhere S = P\nt\u2208{1,2,3,4,5} p( ISUSE = t).\nDetails of adaptive retrieval.\nFor retrieval based on soft constraints, we trigger retrieval if the\nfollowing condition is satisfied:\np( Retrieve = YES)\np( Retrieve = YES) + p(p( Retrieve = NO) > \u03b4.\nB\nEXPERIMENTAL DETAILS\nB.1\nMORE DETAILS OF TRAINING\nMore details of training and computations.\nWe use 4 Nvidia A100 with 80GB memory to train\nour models. All models are trained for 3 epochs with a batch size of 128, a peak learning rate of 2e-5\nwith 3% warmup steps, and linear decay afterward. We set the maximum token length to be 2,048\nfor the 7B model, and 1,524 for the 13B model due to the memory constraint. We use Deepspeed\nstage 3 (Rajbhandari et al., 2020) to conduct multi-GPU distributed training, with training precision\nBfloat16 enabled. FlashAttention (Dao et al., 2022) is used to make the long-context training more\nefficient. We run inference of our trained models using 1-2 Quadro RTX 6000 GPUs with 24GB\nmemory.\n19\n\nPreprint.\nB.2\nMORE DETAILS OF EVALUATIONS\nRetrieval setup details.\nBy default, we use Contriever-MS MARCO to retrieve the top five\ndocuments from Wikipedia, and use official Wikipedia embeddings based on 2018 English Wikipedia.\nOn PopQA, where question and answer pairs are created based on WikiData in 2022, we found\nthat the 2018 Wikipedia sometimes lacks articles about some entities that have been more recently\nadded to Wikipedia. Therefore, for PopQA, we used the December 2020 preprocessed Wikipedia\ncorpus provided by Izacard et al. (2022b) and generated document embeddings.8 The issues of\nperformance variance from different Wikipedia dumps have been reported by prior work (Asai et al.,\n2020; Izacard et al., 2022b). Yet, we observe limited effectiveness of such off-the-shelf retrieval\nmodels trained primarily on knowledge-intensive tasks for open-ended generation (e.g., instruction\nfollowing). Recent or concurrent work studies instruction-tuning of retrieval systems (Asai et al.,\n2023b) or joint training of retrieval and LM components (Lin et al., 2023), while we leave exploring\nthe effectivess of such appraoches for future work. For bio generation and open-domain QA tasks,\nwe additionally retrieve five documents using Google Programmable Search9 and search documents\nfrom English Wikipedia. As this API only provides snippets, we retrieve Wikipedia introductory\nparagraphs for the corresponding entities.\nDetailed experimental settings for individual datasets.\nFor OpenQA datasets, we set the max-\nimum new token number to 100 tokens. For closed-set tasks (PubHealth and ARC-C), we set the\nmaximum new token length to 50 for all baselines. For SELF-RAG inference on PubHealth and\nARC-C, instead of determining the output with the highest score 4 as in other tasks, we aggregate the\nscores for each option and select the answer option with the highest score. We found in zero-shot\nsettings of fact checking, some LLMs can generate capitalized class labels (e.g., True) while our\ngold labels are lower-cased. Therefore, across different LMs, for fact checking, we lowercase the\npredictions. In multiple choice tasks, we found some models generate answers in slightly different\nways (e.g., (A) instead of A). We slightly modify instructions for each LLM to avoid such format\nviolations, and further conduct string matching between each candidate and model predictions if\nformat violations still remain. After that processing, in closed set tasks, model predictions match\none of the gold classes in almost all cases. For ALCE, we found that Llama2-chat tend to generate\nsignificantly lower outputs than other models (e.g., on average, their output is nearly 100 token, while\nChatGPT generates 40 tokens on average), resulting in inflated str-em scores. We limit the maximum\ngeneration length to 100 tokens for all baselines to avoid this issue, rather than the original 300\ntokens in the ALCE paper. Consequently, all of the baseline output length is within 30-60 tokens.\nFor FactScore, we set the maximum new token length to 500 for baselines and 200 for SELF-RAG at\neach segment level.\nTask-specific instructions.\nTable 5 shows the list of the instructions used during evaluations. For\nOpen-domain QA, we do not provide explicit instructions.\nC\nRESULTS\nC.1\nANALYSIS\nReliance on parametric- and non-parametric memories.\nWe conduct analysis on how frequently\nmodel answers come from retrieved passages (non-parametric memories) or their own parametric\nmemories. On two open-domain QA datasets, TriviaQA and PopQA, we conduct the following\nanalysis: 1) sample query models successfully answer correctly, 2) for each query in this group,\ncheck whether the matched ground-truth answer is a sub-string of the retrieved passage or not. We\nevaluate SELF-RAG 7B, Alpaca 7B, Alpaca 13B, and Llama2-Chat-13B. We found that SELF-RAG\nsignificantly less frequently generates answers that are not included in the provided evidence; in\nparticular, in Alpaca 30B, 20% of the correct predictions are not included in the provided passages,\nfollowed by Llama2-chat 13B (18%) and Alpaca (15%), while it is only 2% in SELF-RAG. When\nretrieved passages are not relevant, SELF-RAG generates\nISREL =Irrelevant, indicating that the\nfollowing answers may not be factually grounded, while those instruction-tuned models continue to\ngenerate plausible answers.\n8https://github.com/facebookresearch/atlas\n9https://programmablesearchengine.google.com/about/\n20\n\nPreprint.\nC.2\nHUMAN EVALUATION EXAMPLES\nTable 6 shows examples with human evaluations on S&P and correctness of\nISREL and\nISSUP\nreflection tokens.\nC.3\nQUALITATIVE EXAMPLES\nTable 7 shows several examples predicted by our SELF-RAG (13B). The first example is the model\noutput to an ASQA question. The first reference states that Emperor Constantine made Sunday a\nday of rest from labor, and further the second citation supports the fact that the official adoption\nof Sunday as a day of rest by Constantine in AD 321. In the second example, the model predicts\nContradictory to the first output as the output says the person has served as the CEO since 2010,\nwhile the passage says he stepped down as CEO in 2015. Indicating those factual contradictions\nas reflection tokens enables to enforcement of hard control and also verification of model outputs\neasily. In the third example, while the generation is mostly correct, SELF-RAG predicts Partially\nSupport to the statement listing the name of the songs, as they were not explicitly mentioned.\nD\nFULL LIST OF INSTRUCTIONS AND DEMONSTRATIONS FOR GPT-4\nHere, we show the instructions and demonstrations used to prompt GPT-4 to collect reflection tokens.\nTable 8 shows the instructions and demonstrations for the initial retrieval token. Table 9 shows\nthe instruction and demonstrations used to collect the three-way output tokens for\nRetrieve given\ninstruction, preceding sentences, and previously retrieved passages. Due to the longer demonstration\nand test input, we only use a single demonstration. Table 10 shows an instruction and demonstrations\nused to collect the three-way output tokens for\nISREL . Table 11 shows an instruction and demon-\nstrations used to collect the three-way output tokens for\nISREL . Table 12 shows an instruction and\ndemonstrations used to collect the five-way output tokens for\nISUSE .\n21\n\nPreprint.\nInput Identify the two types of computer memory. (from gpt4 alpaca)\nOutput [ Retrieve =Yes]<p>Computer memory Computer memory \u2013 In computing, memory refers to the\ncomputer hardware integrated circuits that store information for immediate use in a computer; it is synonymous\nwith the term \u201cprimary storage\u201d. Computer memory operates at a high speed, for example random-access memory\n(RAM), as a distinction from storage that provides slow-to-access information but offers higher capacities. If\nneeded, contents of the computer memory can be transferred to secondary storage; a very common way of doing\nthis is through a memory management technique called \u201cvirtual memory\u201d. An archaic synonym for memory is\nstore. The term \u201cmemory\u201d, meaning \u201cprimary storage\u201d or \u201cmain memory\u201d, is<p>[\nISREL =Relevant]Primary\nmemory, also known as main memory, is the memory that the computer can directly access and manipulate.\n[\nISSUP =Fully Supported] [ Retrieve =Yes]<p>Computer memory\u2013often associated with addressable\nsemiconductor memory, i.e. integrated circuits consisting of silicon-based transistors, used for example as\nprimary storage but also other purposes in computers and other digital electronic devices. There are two main\nkinds of semiconductor memory, volatile and non-volatile. Examples of non-volatile memory are flash memory\n(used as secondary memory) and ROM, PROM, EPROM and EEPROM memory (used for storing firmware\nsuch as BIOS). Examples of volatile memory are primary storage, which is typically dynamic random-access\nmemory (DRAM), and fast CPU cache memory, which is typically static random-access memory (SRAM)\nthat is fast but energy-consuming, offering lower memory<p>[\nISREL =Relevant]Primary memory can be\naccessed quickly, but it is volatile, meaning that the data is lost if the power is turned off.[\nISSUP =Partially\nSupported]...[\nISUSE :5]\nInput Give an example of a situation where you have to delegate tasks (from gpt4 alpaca)\nOutput [ Retrieve =No]The manager realizes that there is an extensive list of tasks that need to be completed in\norder to make the event a success.[ Retrieve =Yes]<p>Delegation\u2013Delegation is the assignment of any responsi-\nbility or authority to another person (normally from a manager to a subordinate) to carry out specific activities. It\nis one of the core concepts of management leadership. However, the person who delegated the work remains\naccountable for the outcome of the delegated work. Delegation empowers a subordinate to make decisions, i.e. it\nis a shifting of decision-making authority from one organizational level to a lower one. Delegation, if properly\ndone, is not fabrication. The opposite of effective delegation is micromanagement, where a manager provides too\nmuch input,<p>[\nISREL =Relevant]This includes tasks such as creating a guest list, designing and sending in-\nvitations, booking a venue, coordinating with vendors, planning the event\u00b4s program, and monitoring the budget.[\nISSUP =Partially Supported][ Retrieve =No]Since it is not possible for the manager to handle everything\nalone, they must delegate tasks to their team members.[ Retrieve =No]The manager would then assign each\nteam member specific responsibilities based on their individual skillsets and strengths.[ Retrieve =Yes]<p>Joint\napplication design \u2013 Subject Matter Experts: These are the business users, the IS professionals, and the outside\nexperts that will be needed for a successful workshop. This group is the backbone of the meeting<p>[\nISREL\n=Irrelevant]For instance, the team\u00b4s graphic designer might be tasked with designing the invitations, while\nthe event coordinator would be in charge of planning the program and working with vendors...[ Retrieve =No]By\ndelegating tasks, the manager can ensure that all necessary tasks are completed in a timely manner, while also\nempowering their team members to take on responsibilities and contribute to the success of the event.[\nISUSE\n=5]\nInput Synthesize a poem based on this prompt:\u201cThe sun is setting\u201d (from stanford alpaca)\nOutput [ Retrieve =No]The stars begin to twinkle bright the trees, scattered throughout the night;\n[ Retrieve =No]The stars begin to twinkle bright the trees, scattered throughout the night [ Retrieve =No] They\nflicker like a silent dance, A peaceful moment in its trance. [ Retrieve =No] They flicker like a silent dance, A\npeaceful moment in its trance. [ Retrieve =No] A chorus of crickets sing a lullaby, To every creature that roams\nthe sky [\nISUSE =5]\nInput when did walking dead season 7 come out (from nq)\nOutput [ Retrieve =Yes]<p>The Walking Dead (season 7)\u2013The Walking Dead (season 7) The seventh season of\n\u201cThe Walking Dead\u201d, an American post-apocalyptic horror television series on AMC, premiered on October 23,\n2016, and concluded on April 2, 2017, consisting of 16 episodes. Developed for television by Frank Darabont,\nthe series is based on the eponymous series of comic books by Robert Kirkman, Tony Moore, and Charlie Adlard.\n...<p>[\nISREL =Relevant]October 23 , 2016[\nISSUP =Fully Supported][\nISUSE =5]\nInput Given a chat history separated by new lines, generates an informative, knowledgeable and engaging\nresponse: Hello, I love German shepherd dogs and you? \u2013 My favorite dog, they are officially known as German\nShepherd Dogs? \u2013 Yes, I have a German shepherd in my house and she is pregnant (from wow)\nOutput hey also are easily trained, obedient, and intelligent.[ Retrieve =Yes]<p>German Shepherd \u2013 a simple\ndifference of opinion, it is the fundamental issue of the breed\u00b4s essential conformation and movement. ... They\nare known for being easy to train and good for performing tasks and following instructions. They are especially\nwell known for their police work, being used for tracking criminals, patrolling troubled areas and detecting and\nholding suspects. <p>[\nISREL =Relevant]Because of this, they are often used for disability assistance and\nfor police work. [\nISSUP =Partially Supported][\nISUSE =2]\nTable 4: List of the training examples.\n22\n\nPreprint.\nDataset\nInstruction\nARC-C\nGiven four answer candidates, A, B, C and D, choose the best answer choice. Please answer\nwith the capitalized alphabet only, without adding any extra phrase or period.\nPubHealth\nIs the following statement correct or not? Say true if it\u2019s correct; otherwise, say false. Don\u2019t\ncapitalize or add periods, just say \u201ctrue\u201d or \u201cfalse\u201d.\nBio Generation\nTell me a bio about [Person Name]\nASQA (baseline) Instruction: Write an accurate, engaging, and concise answer for the given question using only\nthe provided search results (some of which might be irrelevant) and cite them properly. Use\nan unbiased and journalistic tone. Always cite for any factual claim. When citing several\nsearch results, use [1][2][3]. Cite at least one document and at most three documents in each\nsentence. If multiple documents support the sentence, only cite a minimum sufficient subset of\nthe documents.\nASQA (ours)\nAnswer the following question. The question may be ambiguous and have multiple correct\nanswers, and in that case, you have to provide a long-form answer including all correct answers.\nTable 5: Full list of instructions used during zero-shot evaluations. For open-domain QA, we don\u2019t\nuse any task specific instruction and simply use the original questions as input query.\n23\n\nPreprint.\nInput What genre is A Question and Answer Guide to Astronomy? (PopQA)\nOutput [ Retrieve =Yes] <p>Reference [1]<p>[\nISREL =Relevant] A Question and Answer Guide to As-\ntronomy is a non-fiction book that falls under the genre of Astronomy and Cosmology. [\nISSUP =Fully\nSupported][\nISUSE =5]\nReference [1] A Question and Answer Guide to Astronomy is a book about astronomy and cosmology, and is\nintended for a general audience. The book was written by Pierre-Yves Bely, Carol Christian, and Jean-Rene\nRoy, and published in English by Cambridge University Press in 2010. It was originally written in French. The\ncontent within the book is written using a question and answer format. It contains some 250 questions, which\nThe Science Teacher states each are answered with a concise and well-formulated essay that is informative and\nreadable. The Science Teacher review goes on to state that many of the answers given in the book are little gems\nof science writing. The Science Teacher summarizes by stating that each question is likely to be thought of by a\nstudent, and that the answers are informative, well constructed, and thorough. The book covers information about\nthe planets, the Earth, the Universe, practical astronomy, history, and awkward questions such as astronomy in\nthe Bible, UFOs, and aliens. Also covered are subjects such as the Big Bang, comprehension of large numbers,\nand the Moon illusion.\nS&P Supported and Plausible.\nCorrectness of\nISREL and\nISSUP : Both\nISREL and\nISSUP are correct, as the Reference [1] provides\ndetailed information of the book including the genre, and the model output is fully supported by the reference.\nInput Who is the author of The Lie? (PopQA)\nOutput [ Retrieve =Yes] <p>Reference [1]<p>[\nISREL =Relevant] The author of The Lie is Sam Harris.[\nISSUP =Fully Supported][\nISUSE =5]\nReference [1] Lying is a 2011 long-form essay book by American author and neuroscience expert Sam Harris.\nHarris argues that we can radically simplify our lives and improve society by merely telling the truth in situations\nwhere others often lie.\nS&P Plausible but not supported.\nCorrectness of\nISREL and\nISSUP\nBoth\nISREL and\nISSUP are incorrect, as the Reference [1] is about a\ndifferent book whose title is similar to The Lie.\nInput Tell me a bio about Ronaldinho (Bio)\nOutput [ Retrieve =Yes] <p>Reference [1]<p>[\nISREL =Relevant] Ronaldinho is a retired professional\nfootballer from Brazil.[\nISSUP =Fully Supported][ Retrieve =Continue]He played as an attacking\nmidfielder and was known for his technical skills, creativity, dribbling ability, and accuracy from free\nkicks[ Retrieve =Continue]He won two FIFA World Player of the Year awards and a Ballon d\u2019Or.[\nISUSE =5]\nReference [1] Ronaldo de Assis Moreira (born 21 March 1980), commonly known as Ronaldinho Ga\u00b4ucho or\nsimply Ronaldinho, is a Brazilian retired professional footballer who played mostly as an attacking midfielder,\nbut was also deployed as a winger. Considered one of the best players of his generation and regarded by many as\none of the greatest of all time, Ronaldinho won two FIFA World Player of the Year awards and a Ballon d\u2019Or. A\nglobal icon of the sport, he was renowned for his technical skills, creativity, dribbling ability and accuracy from\nfree-kicks, as well as his use of tricks, feints, no-look passes and overhead...\nS&P Plausible and fully supported.\nCorrectness of\nISREL and\nISSUP Both\nISREL and\nISSUP are correct.\nInput Tell me a bio about Sergei Bodrov (Bio)\nOutput [ Retrieve =Yes] <p>Reference [1]<p>[\nISREL\n=Relevant] Sergei Vladimirovich Bodrov\n(born June 28,\n1948) is a Russian film director,\nscreenwriter,\nand producer.[\nISSUP\n=Fully\nSupported][ Retrieve =Continue]He was born in Moscow, Russia.[ Retrieve =Continue]He is the presi-\ndent of the Russian Guild of Film Producers.[\nISUSE =5]\nReference [1] Sergei Vladimirovich Bodrov (born June 28, 1948) is a Russian film director, screenwriter, and\nproducer. In 2003 he was the President of the Jury at the 25th Moscow International Film Festival.\nS&P Plausible but only partially supported. The the Reference [1] does not explicitly mention the person is born\nin Moscow and there is no description about the Russian Guild of Film Producers.\nCorrectness of\nISREL and\nISSUP\nISREL and\nISSUP are correct as the reference document is highly relevant\nand the first sentence is fully supported.\nTable 6: Examples of human evaluation results.\n24\n\nPreprint.\nInput When did sunday became the seventh day of the week (asqa)\nOutput [ Retrieve =Yes] <p>Reference [1]<p>[\nISREL =Relevant] In 321 AD, the Roman Emperor Con-\nstantine the Great made Sunday a day of rest from labor, stating: \u201cOn the venerable Day of the Sun let the\nmagistrates and people residing in cities rest, and let all workshops be closed\u201d.[\nISSUP =Fully Supported]\n[ Retrieve =Yes] <p>Reference [2]<p>[\nISREL =Relevant] The official adoption of Sunday as a day of\nrest by Constantine the Great in AD 321 made Sunday the seventh day of the week.[2][\nISSUP =Fully\nSupported][\nISUSE =5]\nReference [1] Emperor Constantine then enacted the first Sunday Laws, for \u201cthe venerable Day of the Sun\u201d\nin 321 A.D. On March 7, 321, the Roman emperor Constantine issued a decree making Sunday a day of rest\nfrom labor, stating: We find a good description of this in sources such as the book Rest Days which states:\nEarly Christian observance of both the spiritual seventh-day sabbath and a Lord\u00b4s Day assembly is evidenced in\nIgnatius\u00b4s letter to the Magnesians ca. 110.\nReference [2] Despite the official adoption of Sunday as a day of rest by Constantine, the seven-day week and\nthe nundial cycle continued to be used side-by-side until at least the Calendar of 354 and probably later. ... The\nfact that the canon had to be issued at all is an indication that adoption of Constantine\u2019s decree of 321 was still\nnot universal ...\nInput Tell me a bio about Rory Tapner. (bio generation)\nOutput <p>Reference [1]<p>[\nISREL =Relevant] Rory Tapner is a British businessman who has served as\nthe Chief Executive Officer of Coutts, a private banking and wealth management company, since 2010.[\nISSUP\n=Contradictory], Reference [2]<p>[\nISREL =Relevant] Rory Tapner was born on 30 September 1959\nin London, England.[\nISSUP =Fully Supported]\nReference [1] Rory Tapner Rory Tapner is a UK businessman who, in September 2010 was appointed CEO of\nCoutts, the Wealth Management division of Royal Bank of Scotland Group. In February 2015 he stepped down\nas CEO when he was replaced in the role by Alison Rose\nReference [2] Holdings (from August 2016); and the Council of the University of Buckingham (from July 2017).\nRory Tapner Rory Tapner (born 30 September 1959) is a UK businessman ...\nInput Tell me a bio about G. Venugopa. (bio generation)\nOutput (ranked 1) [ Retrieve =Yes] <p>Reference [1]<p>[\nISREL =Relevant] G. Venugopal is a popu-\nlar playback singer in the Malayalam film industry. [ Retrieve =Continue] He has sung over 300 songs in\nMalayalam, Tamil, and Hindi movies.[\nISSUP =Partially Supported] [ Retrieve =Yes] <p>Reference\n[2]<p>G. Venugopal was born on December 10, 1960 in India.[\nISSUP =Fully Supported]\nReference [1] \u2019G. Venugopal G Venugopal (born 10 December 1960) is an Indian playback singer known for his\nwork in Malayalam films. He started his singing career in the film \u201cOdaruthammaava Aalariyaam\u201d (1984). Since\nthen he has sung in more than 300 films; and has over 500 private albums to his credit. The many awards he has\nwon include the coveted Best Playback Singer (Kerala State) which he won thrice, the Film Critics award and\nthe Kerala Kaumudi Gallop Poll award (twice). He won The Kerala State award for Best Playback singer (2004)\nthird time for the song \u201daadedee..aadaadedee\u201d from the film \u201dUllam\u201d.Venugopal\u2019\nReference [2] Kerala State Film Awards: Kerala Film Critics Award Kerala State Government Award (Profes-\nsional Drama): Asianet Film Awards: Kerala Kaumadi Gallup Poll Award: Academic G. Venugopal G Venugopal\n(born 10 December 1960) is an Indian playback singer known for his work in Malayalam films.\nTable 7: Examples of outputs.\n25\n\nPreprint.\nInstructions\nGiven an instruction, please make a judgment on whether finding some external documents\nfrom the web (e.g., Wikipedia) helps to generate a better response. Please answer [Yes] or\n[No] and write an explanation.\nDemonstrations\nInstruction Give three tips for staying healthy.\nNeed retrieval? [Yes]\nExplanation There might be some online sources listing three tips for staying healthy or\nsome reliable sources to explain the effects of different behaviors on health. So retrieving\ndocuments is helpful to improve the response to this query.\nInstruction Describe a time when you had to make a difficult decision.\nNeed retrieval? [No]\nExplanation This instruction is asking about some personal experience and thus it does not\nrequire one to find some external documents.\nInstruction Write a short story in third person narration about a protagonist who\nhas to make an important career decision.\nNeed retrieval? [No]\nExplanation This instruction asks us to write a short story, which does not require external\nevidence to verify.\nInstruction What is the capital of France?\nNeed retrieval? [Yes]\nExplanation While the instruction simply asks us to answer the capital of France, which is a\nwidely known fact, retrieving web documents for this question can still help.\nInstruction Find the area of a circle given its radius. Radius = 4\nNeed retrieval? [No]\nExplanation This is a math question and although we may be able to find some documents\ndescribing a formula, it is unlikely to find a document exactly mentioning the answer.\nInstruction Arrange the words in the given sentence to form a grammatically cor-\nrect sentence. quickly the brown fox jumped\nNeed retrieval? [No]\nExplanation This task doesn\u2019t require any external evidence, as it is a simple grammatical\nquestion.\nInstruction Explain the process of cellular respiration in plants.\nNeed retrieval? [Yes]\nExplanation This instruction asks for a detailed description of a scientific concept, and is\nhighly likely that we can find a reliable and useful document to support the response.\nTable 8: Instructions and demonstrations for Retrieve aspect given the input only.\n26\n\nPreprint.\nInstructions\nYou will be provided with an instruction, evidence, output sentence, and preceding sentences\n(optional). If the preceding sentence is given, the output should be the sentence that follows\nthose preceding sentences. Your task is to determine whether the information in the output\nsentence can be fully verified by the evidence or if it requires further external verification.\nThere are three cases:\n- If the output sentence can be verified solely with the evidence, then respond with [Continue\nto Use Evidence].\n- If the sentence doesn\u2019t require any factual verification (e.g., a subjective sentence or a\nsentence about common sense), then respond with [No Retrieval].\n- If additional information is needed to verify the output sentence, respond with [Retrieval].\nPlease provide explanations for your judgments.\nInstruction Explain the use of word embeddings in Natural Language Processing.\nPreceding sentences Word embeddings are one of the most powerful tools available for\nNatural Language Processing (NLP). They are mathematical representations of words or\nphrases in a vector space, allowing similarities between words and the context in which they\nare used to be measured.\nEvidence: Word embedding\nWord embedding is the collective name for a set of language modeling and feature learning\ntechniques in natural language processing (NLP) where words or phrases from the vocabulary\nare mapped to vectors of real numbers. Conceptually it involves a mathematical embedding\nfrom a space with one dimension per word to a continuous vector space with a much lower\ndimension. Output: Word embeddings are useful for tasks such as sentiment analysis, text\nclassification, predicting the next word in a sequence, and understanding synonyms and\nanalogies.\nRating [Retrieval]\nExplanation The output discusses the applications of word embeddings, while the evidence\nonly discusses the definitions of word embeddings and how they work. Therefore, we need to\nretrieve other evidence to verify whether the output is correct or not.\nTable 9: Instructions and demonstrations for Retrieve aspect given the input, preceding generations,\nand retrieved passages.\n27\n\nPreprint.\nInstructions\nYou\u2019ll be provided with an instruction, along with evidence and possibly some preceding\nsentences. When there are preceding sentences, your focus should be on the sentence that\ncomes after them. Your job is to determine if the evidence is relevant to the initial instruction\nand the preceding context, and provides useful information to complete the task described in\nthe instruction. If the evidence meets this requirement, respond with [Relevant]; otherwise,\ngenerate [Irrelevant].\nInstruction Given four answer options, A, B, C, and D, choose the best answer.\nInput Earth\u2019s rotating causes\nA: the cycling of AM and PM\nB: the creation of volcanic eruptions\nC: the cycling of the tides\nD: the creation of gravity\nEvidence Rotation causes the day-night cycle which also creates a corresponding cycle of\ntemperature and humidity creates a corresponding cycle of temperature and humidity. Sea\nlevel rises and falls twice a day as the earth rotates.\nRating [Relevant]\nExplanation The evidence explicitly mentions that the rotation causes a day-night cycle, as\ndescribed in the answer option A.\nInstruction age to run for US House of Representatives\nEvidence The Constitution sets three qualifications for service in the U.S. Senate: age (at\nleast thirty years of age); U.S. citizenship (at least nine years); and residency in the state a\nsenator represents at the time of election.\nRating [Irrelevant]\nExplanation The evidence only discusses the ages to run for the US Senate, not for the\nHouse of Representatives.\nTable 10: Instructions and demonstrations for\nISREL aspect given the input only.\n28\n\nPreprint.\nInstructions\nYou will receive an instruction, evidence, and output, and optional preceding sentences. If the\npreceding sentence is given, the output should be the sentence that follows those preceding\nsentences. Your task is to evaluate if the output is fully supported by the information provided\nin the evidence.\nUse the following entailment scale to generate a score:\n- [Fully supported] - All information in output is supported by the evidence, or extractions\nfrom the evidence. This is only applicable when the output and part of the evidence are\nalmost identical.\n- [Partially supported] - The output is supported by the evidence to some extent, but there\nis major information in the output that is not discussed in the evidence. For example, if an\ninstruction asks about two concepts and the evidence only discusses either of them, it should\nbe considered a [Partially supported].\n- [No support / Contradictory] - The output completely ignores evidence, is unrelated to the\nevidence, or contradicts the evidence. This can also happen if the evidence is irrelevant to the\ninstruction.\nMake sure to not use any external information/knowledge to judge whether the out-\nput is true or not. Only check whether the output is supported by the evidence, and not\nwhether the output follows the instructions or not.\nInstruction Explain the use of word embeddings in Natural Language Processing.\nPreceding sentences Word embeddings are one of the most powerful tools available for\nNatural Language Processing (NLP). They are mathematical representations of words or\nphrases in a vector space, allowing similarities between words and the context in which they\nare used to be measured.\nOutput Word embeddings are useful for tasks such as sentiment analysis, text classification,\npredicting the next word in a sequence, and understanding synonyms and analogies.\nEvidence Word embedding\nWord embedding is the collective name for a set of language modeling and feature learning\ntechniques in natural language processing (NLP) where words or phrases from the vocabulary\nare mapped to vectors of real numbers. Conceptually it involves a mathematical embedding\nfrom a space with one dimension per word to a continuous vector space with a much lower\ndimension. Methods to generate this mapping include neural networks, dimensionality\nreduction on the word co-occurrence matrix, probabilistic models, explainable knowledge\nbase method, and explicit representation in terms of the context in which words appear. Word\nand phrase embeddings, when used as the underlying input representation, have been shown\nto boost the performance in NLP tasks such as syntactic parsing, sentiment analysis, next\ntoken predictions as well and analogy detection.\nScore [Fully supported]\nExplanation The output sentence discusses the application of word embeddings, and the\nevidence mentions all of the applications syntactic parsing, sentiment analysis, next token\npredictions as well as analogy detection as the applications. Therefore, the score should be\n[Fully supported].\nTable 11: Instructions and demonstrations for\nISSUP tokens.\n29\n\nPreprint.\nInstructions\nGiven an instruction and an output, rate whether the response appears to be a helpful and\ninformative answer to the query, from 1 (lowest) - 5 (highest). We call this score perceived\nutility. The detailed criterion is as follows: 5: The response provides a complete, highly\ndetailed, and informative response to the query, fully satisfying the information needs. 4: The\nresponse mostly fulfills the need in the query, while there can be some minor improvements\nsuch as discussing more detailed information, having better structure of the response, or im-\nproving coherence. 3: The response is acceptable, but some major additions or improvements\nare needed to satisfy users\u2019 needs. 2: The response still addresses the main request, but it is\nnot complete or not relevant to the query. 1: The response is barely on-topic or completely\nirrelevant.\nInstruction Who is the current prime minister of the UK as of 2023?\nOutput Boris Johnson was the prime minister of the UK from 2019 - 2022.\nPerceived utility 2\nExplanation While the output provides a factually correct statement about the UK prime\nminister from 2019 to 2022, this instruction asks who the prime minister is as of 2023, so it\ndoesn\u2019t answer the instruction. Therefore, the utility is 2.\nInstruction Given a description of a travel destination, recommend 10 tourist attrac-\ntions with detailed descriptions of each. The travel destination is Tokyo, Japan.\nOutput Tokyo is a vibrant city full of exciting tourist attractions. Some must-see sights\ninclude the Tokyo Skytree, Tokyo Disneyland, Sensoji Temple, Meiji Shrine, Tsukiji Fish\nMarket, Harajuku, and Shinjuku Gyoen.\nPerceived utility 3\nExplanation This output doesn\u2019t provide descriptions of each attraction and the number of\nthe attractions is also less than 10. While this output partially answers the instructions, it\ndoesn\u2019t match the instructions strictly.\nTable 12: Instructions and demonstrations for\nISUSE tokens.\n30\n"}